{"ast":null,"code":"import api from'./api';/**\r\n * 支付请求参数\r\n *//**\r\n * 支付响应\r\n *//**\r\n * 支付服务类\r\n */export class PaymentService{/**\r\n   * 获取用户信用卡列表\r\n   */static async getUserCreditCards(userId){const response=await api.get(`/api/payments/credit-cards/${userId}`);return response.data.data;}/**\r\n   * 添加信用卡\r\n   */static async addCreditCard(userId,cardData){const response=await api.post(`/api/payments/credit-cards/${userId}`,cardData);return response.data.data;}/**\r\n   * 设置默认信用卡\r\n   */static async setDefaultCreditCard(userId,cardId){const response=await api.put(`/api/payments/credit-cards/${userId}/default/${cardId}`);return response.data.message;}/**\r\n   * 删除信用卡\r\n   */static async deleteCreditCard(userId,cardId){const response=await api.delete(`/api/payments/credit-cards/${userId}/${cardId}`);return response.data.message;}/**\r\n   * 获取可用分期方案列表\r\n   */static async getAvailableInstallmentPlans(amount){const response=await api.get(`/api/payments/installment-plans`,{params:{amount}});return response.data.data;}/**\r\n   * 计算分期付款详情\r\n   */static async calculateInstallment(amount,installmentPlanId){const response=await api.get(`/api/payments/calculate-installment`,{params:{amount,installmentPlanId}});return response.data.data;}/**\r\n   * 支付订单\r\n   */static async payOrder(userId,request){const response=await api.post(`/api/payments/${userId}/pay`,request);return response.data.data;}/**\r\n   * 查询支付状态\r\n   */static async queryPaymentStatus(paymentNo){const response=await api.get(`/api/payments/status/${paymentNo}`);return response.data.data;}}","map":{"version":3,"names":["api","PaymentService","getUserCreditCards","userId","response","get","data","addCreditCard","cardData","post","setDefaultCreditCard","cardId","put","message","deleteCreditCard","delete","getAvailableInstallmentPlans","amount","params","calculateInstallment","installmentPlanId","payOrder","request","queryPaymentStatus","paymentNo"],"sources":["D:/luckymall/frontend/src/services/paymentService.ts"],"sourcesContent":["import api from './api';\r\nimport { ApiResponse, InstallmentPlan, UserCreditCard } from '../types';\r\n\r\n/**\r\n * 支付请求参数\r\n */\r\nexport interface PaymentRequest {\r\n  orderId: number;\r\n  paymentMethod: string;\r\n  creditCardId?: number;\r\n  installmentPlanId?: number;\r\n  amount: number;\r\n}\r\n\r\n/**\r\n * 支付响应\r\n */\r\nexport interface PaymentResponse {\r\n  paymentId: number;\r\n  paymentNo: string;\r\n  status: string;\r\n  paymentTime: string;\r\n}\r\n\r\n/**\r\n * 支付服务类\r\n */\r\nexport class PaymentService {\r\n  /**\r\n   * 获取用户信用卡列表\r\n   */\r\n  static async getUserCreditCards(userId: number): Promise<UserCreditCard[]> {\r\n    const response = await api.get<ApiResponse<UserCreditCard[]>>(`/api/payments/credit-cards/${userId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 添加信用卡\r\n   */\r\n  static async addCreditCard(userId: number, cardData: Partial<UserCreditCard>): Promise<UserCreditCard> {\r\n    const response = await api.post<ApiResponse<UserCreditCard>>(`/api/payments/credit-cards/${userId}`, cardData);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 设置默认信用卡\r\n   */\r\n  static async setDefaultCreditCard(userId: number, cardId: number): Promise<string> {\r\n    const response = await api.put<ApiResponse<string>>(`/api/payments/credit-cards/${userId}/default/${cardId}`);\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 删除信用卡\r\n   */\r\n  static async deleteCreditCard(userId: number, cardId: number): Promise<string> {\r\n    const response = await api.delete<ApiResponse<string>>(`/api/payments/credit-cards/${userId}/${cardId}`);\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 获取可用分期方案列表\r\n   */\r\n  static async getAvailableInstallmentPlans(amount: number): Promise<InstallmentPlan[]> {\r\n    const response = await api.get<ApiResponse<InstallmentPlan[]>>(`/api/payments/installment-plans`, {\r\n      params: { amount }\r\n    });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 计算分期付款详情\r\n   */\r\n  static async calculateInstallment(amount: number, installmentPlanId: number): Promise<{\r\n    monthlyAmount: number;\r\n    totalAmount: number;\r\n    interestAmount: number;\r\n  }> {\r\n    const response = await api.get<ApiResponse<{\r\n      monthlyAmount: number;\r\n      totalAmount: number;\r\n      interestAmount: number;\r\n    }>>(`/api/payments/calculate-installment`, {\r\n      params: { amount, installmentPlanId }\r\n    });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 支付订单\r\n   */\r\n  static async payOrder(userId: number, request: PaymentRequest): Promise<PaymentResponse> {\r\n    const response = await api.post<ApiResponse<PaymentResponse>>(`/api/payments/${userId}/pay`, request);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 查询支付状态\r\n   */\r\n  static async queryPaymentStatus(paymentNo: string): Promise<string> {\r\n    const response = await api.get<ApiResponse<string>>(`/api/payments/status/${paymentNo}`);\r\n    return response.data.data;\r\n  }\r\n} "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB;AACA;AACA,GASA;AACA;AACA,GAQA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAe,CAC1B;AACF;AACA,KACE,YAAa,CAAAC,kBAAkBA,CAACC,MAAc,CAA6B,CACzE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAgC,8BAA8BF,MAAM,EAAE,CAAC,CACrG,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAC,aAAaA,CAACJ,MAAc,CAAEK,QAAiC,CAA2B,CACrG,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACS,IAAI,CAA8B,8BAA8BN,MAAM,EAAE,CAAEK,QAAQ,CAAC,CAC9G,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAI,oBAAoBA,CAACP,MAAc,CAAEQ,MAAc,CAAmB,CACjF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACY,GAAG,CAAsB,8BAA8BT,MAAM,YAAYQ,MAAM,EAAE,CAAC,CAC7G,MAAO,CAAAP,QAAQ,CAACE,IAAI,CAACO,OAAO,CAC9B,CAEA;AACF;AACA,KACE,YAAa,CAAAC,gBAAgBA,CAACX,MAAc,CAAEQ,MAAc,CAAmB,CAC7E,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACe,MAAM,CAAsB,8BAA8BZ,MAAM,IAAIQ,MAAM,EAAE,CAAC,CACxG,MAAO,CAAAP,QAAQ,CAACE,IAAI,CAACO,OAAO,CAC9B,CAEA;AACF;AACA,KACE,YAAa,CAAAG,4BAA4BA,CAACC,MAAc,CAA8B,CACpF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAiC,iCAAiC,CAAE,CAChGa,MAAM,CAAE,CAAED,MAAO,CACnB,CAAC,CAAC,CACF,MAAO,CAAAb,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAa,oBAAoBA,CAACF,MAAc,CAAEG,iBAAyB,CAIxE,CACD,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAI1B,qCAAqC,CAAE,CACzCa,MAAM,CAAE,CAAED,MAAM,CAAEG,iBAAkB,CACtC,CAAC,CAAC,CACF,MAAO,CAAAhB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAe,QAAQA,CAAClB,MAAc,CAAEmB,OAAuB,CAA4B,CACvF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACS,IAAI,CAA+B,iBAAiBN,MAAM,MAAM,CAAEmB,OAAO,CAAC,CACrG,MAAO,CAAAlB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAiB,kBAAkBA,CAACC,SAAiB,CAAmB,CAClE,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAsB,wBAAwBmB,SAAS,EAAE,CAAC,CACxF,MAAO,CAAApB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}