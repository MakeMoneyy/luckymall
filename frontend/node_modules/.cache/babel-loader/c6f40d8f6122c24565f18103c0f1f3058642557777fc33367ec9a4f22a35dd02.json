{"ast":null,"code":"import api from './api';\n// 模拟产品数据\nexport const mockProducts = [{\n  id: 1,\n  name: 'iPhone 15 Pro Max',\n  description: '最新款苹果手机，搭载A17 Pro芯片，6.7英寸Super Retina XDR显示屏，48MP主摄像头，钛金属边框。',\n  price: 8999,\n  stockQuantity: 100,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/iphone15/200/200',\n  salesCount: 1000,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 2,\n  name: '华为 Mate 60 Pro',\n  description: '华为最新旗舰手机，搭载麒麟9000S芯片，6.8英寸OLED曲面屏，50MP超感知摄像头，卫星通信功能。',\n  price: 6999,\n  stockQuantity: 50,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/huawei60/200/200',\n  salesCount: 800,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 3,\n  name: '小米 14 Ultra',\n  description: '小米顶级影像旗舰，搭载骁龙8 Gen 3芯片，6.7英寸2K+四曲面屏，徕卡认证四摄，5000mAh大电池。',\n  price: 5999,\n  stockQuantity: 80,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/xiaomi14/200/200',\n  salesCount: 600,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 4,\n  name: 'OPPO Find X7',\n  description: 'OPPO旗舰手机，搭载天玑9300芯片，6.8英寸2K+微曲屏，哈苏认证四摄，5000mAh电池，100W快充。',\n  price: 4999,\n  stockQuantity: 120,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/oppofindx7/200/200',\n  salesCount: 500,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 5,\n  name: 'MacBook Pro 16英寸',\n  description: 'M3 Pro芯片，16GB内存，512GB SSD，16英寸Liquid视网膜XDR显示屏，专业级图形处理性能。',\n  price: 18999,\n  stockQuantity: 50,\n  categoryId: 2,\n  imageUrl: 'https://picsum.photos/seed/macbookpro/200/200',\n  salesCount: 200,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '电脑办公'\n}, {\n  id: 6,\n  name: '戴森吸尘器 V12',\n  description: '强劲吸力，60分钟续航，智能感应灰尘，LCD显示屏，多种吸头适应不同清洁需求。',\n  price: 4999,\n  stockQuantity: 100,\n  categoryId: 9,\n  imageUrl: 'https://picsum.photos/seed/dysonv12/200/200',\n  salesCount: 150,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '家居家装'\n}, {\n  id: 7,\n  name: 'Sony WH-1000XM5 耳机',\n  description: '业界领先的降噪耳机，8麦克风系统，30小时续航，LDAC高解析音频，触控操作，多设备连接。',\n  price: 2999,\n  stockQuantity: 200,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/sonywh1000xm5/200/200',\n  salesCount: 300,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 8,\n  name: 'Nintendo Switch OLED',\n  description: '7英寸OLED屏幕，增强音效，64GB存储，有线LAN端口，可调节支架，家用和便携两用游戏机。',\n  price: 2499,\n  stockQuantity: 80,\n  categoryId: 7,\n  imageUrl: 'https://picsum.photos/seed/nintendoswitch/200/200',\n  salesCount: 120,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '图书音像'\n}, {\n  id: 9,\n  name: 'Apple Watch Series 9',\n  description: '全天候视网膜显示屏，健康监测功能，心率监测，血氧监测，睡眠追踪，运动追踪，防水设计。',\n  price: 3299,\n  stockQuantity: 150,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/applewatch9/200/200',\n  salesCount: 250,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 10,\n  name: '三星 Galaxy S23 Ultra',\n  description: '2亿像素相机，骁龙8 Gen2处理器，6.8英寸Dynamic AMOLED 2X显示屏，S Pen触控笔，5000mAh电池。',\n  price: 8999,\n  stockQuantity: 100,\n  categoryId: 1,\n  imageUrl: 'https://picsum.photos/seed/samsungs23/200/200',\n  salesCount: 180,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '手机数码'\n}, {\n  id: 11,\n  name: 'iPad Pro 12.9英寸',\n  description: 'M2芯片，XDR显示屏，12.9英寸Liquid视网膜XDR显示屏，支持Apple Pencil 2代，Face ID面容识别。',\n  price: 8799,\n  stockQuantity: 70,\n  categoryId: 2,\n  imageUrl: 'https://picsum.photos/seed/ipadpro/200/200',\n  salesCount: 130,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '电脑办公'\n}, {\n  id: 12,\n  name: '小米空气净化器 4 Pro',\n  description: 'HEPA滤网，智能控制，500m³/h CADR值，激光颗粒物传感器，APP远程控制，静音模式。',\n  price: 1499,\n  stockQuantity: 120,\n  categoryId: 3,\n  imageUrl: 'https://picsum.photos/seed/miairpurifier/200/200',\n  salesCount: 200,\n  status: 1,\n  createdAt: '2023-01-01',\n  updatedAt: '2023-01-01',\n  categoryName: '家用电器'\n}];\n\n/**\r\n * 商品服务类\r\n */\nexport class ProductService {\n  /**\r\n   * 获取商品列表\r\n   */\n  static async getProducts(params = {}) {\n    try {\n      const response = await api.get('/api/products', {\n        params\n      });\n      return response.data.data;\n    } catch (error) {\n      console.error('获取商品列表失败，使用模拟数据:', error);\n\n      // 使用模拟数据\n      let filteredProducts = [...mockProducts];\n\n      // 应用筛选条件\n      if (params.categoryId) {\n        filteredProducts = filteredProducts.filter(p => p.categoryId === params.categoryId);\n      }\n      if (params.minPrice) {\n        filteredProducts = filteredProducts.filter(p => p.price >= params.minPrice);\n      }\n      if (params.maxPrice) {\n        filteredProducts = filteredProducts.filter(p => p.price <= params.maxPrice);\n      }\n\n      // 应用排序\n      if (params.sortBy) {\n        if (params.sortBy === 'price_asc') {\n          filteredProducts.sort((a, b) => a.price - b.price);\n        } else if (params.sortBy === 'price_desc') {\n          filteredProducts.sort((a, b) => b.price - a.price);\n        } else if (params.sortBy === 'sales_desc') {\n          filteredProducts.sort((a, b) => b.salesCount - a.salesCount);\n        }\n      }\n\n      // 分页处理\n      const current = params.current || 1;\n      const size = params.size || 10;\n      const start = (current - 1) * size;\n      const end = start + size;\n      const records = filteredProducts.slice(start, end);\n      const total = filteredProducts.length;\n      const pages = Math.ceil(total / size);\n      return {\n        records,\n        total,\n        current,\n        size,\n        pages\n      };\n    }\n  }\n\n  /**\r\n   * 根据ID获取商品详情\r\n   */\n  static async getProductById(id) {\n    try {\n      const response = await api.get(`/api/products/${id}`);\n      return response.data.data;\n    } catch (error) {\n      console.error(`获取商品详情失败，ID: ${id}，使用模拟数据:`, error);\n\n      // 查找模拟数据\n      const product = mockProducts.find(p => p.id === id);\n      if (product) {\n        return product;\n      }\n\n      // 如果找不到商品，抛出错误\n      throw new Error(`商品不存在，ID: ${id}`);\n    }\n  }\n\n  /**\r\n   * 搜索商品\r\n   */\n  static async searchProducts(params) {\n    try {\n      const response = await api.get('/api/products/search', {\n        params\n      });\n      return response.data.data;\n    } catch (error) {\n      console.error('搜索商品失败，使用模拟数据:', error);\n\n      // 使用模拟数据\n      let filteredProducts = [...mockProducts];\n\n      // 应用关键词搜索\n      if (params.keyword) {\n        const keyword = params.keyword.toLowerCase();\n        filteredProducts = filteredProducts.filter(p => {\n          var _p$categoryName;\n          return p.name.toLowerCase().includes(keyword) || p.description.toLowerCase().includes(keyword) || ((_p$categoryName = p.categoryName) === null || _p$categoryName === void 0 ? void 0 : _p$categoryName.toLowerCase().includes(keyword));\n        });\n      }\n\n      // 应用分类筛选\n      if (params.categoryId) {\n        filteredProducts = filteredProducts.filter(p => p.categoryId === params.categoryId);\n      }\n\n      // 应用排序\n      if (params.sortBy) {\n        if (params.sortBy === 'price_asc') {\n          filteredProducts.sort((a, b) => a.price - b.price);\n        } else if (params.sortBy === 'price_desc') {\n          filteredProducts.sort((a, b) => b.price - a.price);\n        } else if (params.sortBy === 'sales_desc') {\n          filteredProducts.sort((a, b) => b.salesCount - a.salesCount);\n        }\n      }\n\n      // 分页处理\n      const current = params.current || 1;\n      const size = params.size || 10;\n      const start = (current - 1) * size;\n      const end = start + size;\n      const records = filteredProducts.slice(start, end);\n      const total = filteredProducts.length;\n      const pages = Math.ceil(total / size);\n      return {\n        records,\n        total,\n        current,\n        size,\n        pages\n      };\n    }\n  }\n\n  /**\r\n   * 获取所有分类\r\n   */\n  static async getAllCategories() {\n    const response = await api.get('/api/categories');\n    return response.data.data;\n  }\n\n  /**\r\n   * 获取顶级分类\r\n   */\n  static async getTopCategories() {\n    const response = await api.get('/api/categories/top');\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据父分类ID获取子分类\r\n   */\n  static async getCategoriesByParentId(parentId) {\n    const response = await api.get(`/api/categories/parent/${parentId}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据ID获取分类详情\r\n   */\n  static async getCategoryById(id) {\n    const response = await api.get(`/api/categories/${id}`);\n    return response.data.data;\n  }\n}","map":{"version":3,"names":["api","mockProducts","id","name","description","price","stockQuantity","categoryId","imageUrl","salesCount","status","createdAt","updatedAt","categoryName","ProductService","getProducts","params","response","get","data","error","console","filteredProducts","filter","p","minPrice","maxPrice","sortBy","sort","a","b","current","size","start","end","records","slice","total","length","pages","Math","ceil","getProductById","product","find","Error","searchProducts","keyword","toLowerCase","_p$categoryName","includes","getAllCategories","getTopCategories","getCategoriesByParentId","parentId","getCategoryById"],"sources":["D:/luckymall/frontend/src/services/productService.ts"],"sourcesContent":["import api from './api';\r\nimport { \r\n  Product, \r\n  Category, \r\n  ApiResponse, \r\n  PageResult, \r\n  ProductQueryParams, \r\n  ProductSearchParams \r\n} from '../types';\r\n\r\n// 模拟产品数据\r\nexport const mockProducts: Product[] = [\r\n  {\r\n    id: 1,\r\n    name: 'iPhone 15 Pro Max',\r\n    description: '最新款苹果手机，搭载A17 Pro芯片，6.7英寸Super Retina XDR显示屏，48MP主摄像头，钛金属边框。',\r\n    price: 8999,\r\n    stockQuantity: 100,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/iphone15/200/200',\r\n    salesCount: 1000,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '华为 Mate 60 Pro',\r\n    description: '华为最新旗舰手机，搭载麒麟9000S芯片，6.8英寸OLED曲面屏，50MP超感知摄像头，卫星通信功能。',\r\n    price: 6999,\r\n    stockQuantity: 50,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/huawei60/200/200',\r\n    salesCount: 800,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '小米 14 Ultra',\r\n    description: '小米顶级影像旗舰，搭载骁龙8 Gen 3芯片，6.7英寸2K+四曲面屏，徕卡认证四摄，5000mAh大电池。',\r\n    price: 5999,\r\n    stockQuantity: 80,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/xiaomi14/200/200',\r\n    salesCount: 600,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'OPPO Find X7',\r\n    description: 'OPPO旗舰手机，搭载天玑9300芯片，6.8英寸2K+微曲屏，哈苏认证四摄，5000mAh电池，100W快充。',\r\n    price: 4999,\r\n    stockQuantity: 120,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/oppofindx7/200/200',\r\n    salesCount: 500,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'MacBook Pro 16英寸',\r\n    description: 'M3 Pro芯片，16GB内存，512GB SSD，16英寸Liquid视网膜XDR显示屏，专业级图形处理性能。',\r\n    price: 18999,\r\n    stockQuantity: 50,\r\n    categoryId: 2,\r\n    imageUrl: 'https://picsum.photos/seed/macbookpro/200/200',\r\n    salesCount: 200,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '电脑办公'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '戴森吸尘器 V12',\r\n    description: '强劲吸力，60分钟续航，智能感应灰尘，LCD显示屏，多种吸头适应不同清洁需求。',\r\n    price: 4999,\r\n    stockQuantity: 100,\r\n    categoryId: 9,\r\n    imageUrl: 'https://picsum.photos/seed/dysonv12/200/200',\r\n    salesCount: 150,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '家居家装'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Sony WH-1000XM5 耳机',\r\n    description: '业界领先的降噪耳机，8麦克风系统，30小时续航，LDAC高解析音频，触控操作，多设备连接。',\r\n    price: 2999,\r\n    stockQuantity: 200,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/sonywh1000xm5/200/200',\r\n    salesCount: 300,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nintendo Switch OLED',\r\n    description: '7英寸OLED屏幕，增强音效，64GB存储，有线LAN端口，可调节支架，家用和便携两用游戏机。',\r\n    price: 2499,\r\n    stockQuantity: 80,\r\n    categoryId: 7,\r\n    imageUrl: 'https://picsum.photos/seed/nintendoswitch/200/200',\r\n    salesCount: 120,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '图书音像'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Apple Watch Series 9',\r\n    description: '全天候视网膜显示屏，健康监测功能，心率监测，血氧监测，睡眠追踪，运动追踪，防水设计。',\r\n    price: 3299,\r\n    stockQuantity: 150,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/applewatch9/200/200',\r\n    salesCount: 250,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '三星 Galaxy S23 Ultra',\r\n    description: '2亿像素相机，骁龙8 Gen2处理器，6.8英寸Dynamic AMOLED 2X显示屏，S Pen触控笔，5000mAh电池。',\r\n    price: 8999,\r\n    stockQuantity: 100,\r\n    categoryId: 1,\r\n    imageUrl: 'https://picsum.photos/seed/samsungs23/200/200',\r\n    salesCount: 180,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '手机数码'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'iPad Pro 12.9英寸',\r\n    description: 'M2芯片，XDR显示屏，12.9英寸Liquid视网膜XDR显示屏，支持Apple Pencil 2代，Face ID面容识别。',\r\n    price: 8799,\r\n    stockQuantity: 70,\r\n    categoryId: 2,\r\n    imageUrl: 'https://picsum.photos/seed/ipadpro/200/200',\r\n    salesCount: 130,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '电脑办公'\r\n  },\r\n  {\r\n    id: 12,\r\n    name: '小米空气净化器 4 Pro',\r\n    description: 'HEPA滤网，智能控制，500m³/h CADR值，激光颗粒物传感器，APP远程控制，静音模式。',\r\n    price: 1499,\r\n    stockQuantity: 120,\r\n    categoryId: 3,\r\n    imageUrl: 'https://picsum.photos/seed/miairpurifier/200/200',\r\n    salesCount: 200,\r\n    status: 1,\r\n    createdAt: '2023-01-01',\r\n    updatedAt: '2023-01-01',\r\n    categoryName: '家用电器'\r\n  }\r\n];\r\n\r\n/**\r\n * 商品服务类\r\n */\r\nexport class ProductService {\r\n  \r\n  /**\r\n   * 获取商品列表\r\n   */\r\n  static async getProducts(params: ProductQueryParams = {}): Promise<PageResult<Product>> {\r\n    try {\r\n      const response = await api.get<ApiResponse<PageResult<Product>>>('/api/products', { params });\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error('获取商品列表失败，使用模拟数据:', error);\r\n      \r\n      // 使用模拟数据\r\n      let filteredProducts = [...mockProducts];\r\n      \r\n      // 应用筛选条件\r\n      if (params.categoryId) {\r\n        filteredProducts = filteredProducts.filter(p => p.categoryId === params.categoryId);\r\n      }\r\n      \r\n      if (params.minPrice) {\r\n        filteredProducts = filteredProducts.filter(p => p.price >= params.minPrice);\r\n      }\r\n      \r\n      if (params.maxPrice) {\r\n        filteredProducts = filteredProducts.filter(p => p.price <= params.maxPrice);\r\n      }\r\n      \r\n      // 应用排序\r\n      if (params.sortBy) {\r\n        if (params.sortBy === 'price_asc') {\r\n          filteredProducts.sort((a, b) => a.price - b.price);\r\n        } else if (params.sortBy === 'price_desc') {\r\n          filteredProducts.sort((a, b) => b.price - a.price);\r\n        } else if (params.sortBy === 'sales_desc') {\r\n          filteredProducts.sort((a, b) => b.salesCount - a.salesCount);\r\n        }\r\n      }\r\n      \r\n      // 分页处理\r\n      const current = params.current || 1;\r\n      const size = params.size || 10;\r\n      const start = (current - 1) * size;\r\n      const end = start + size;\r\n      const records = filteredProducts.slice(start, end);\r\n      const total = filteredProducts.length;\r\n      const pages = Math.ceil(total / size);\r\n      \r\n      return {\r\n        records,\r\n        total,\r\n        current,\r\n        size,\r\n        pages\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据ID获取商品详情\r\n   */\r\n  static async getProductById(id: number): Promise<Product> {\r\n    try {\r\n      const response = await api.get<ApiResponse<Product>>(`/api/products/${id}`);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error(`获取商品详情失败，ID: ${id}，使用模拟数据:`, error);\r\n      \r\n      // 查找模拟数据\r\n      const product = mockProducts.find(p => p.id === id);\r\n      if (product) {\r\n        return product;\r\n      }\r\n      \r\n      // 如果找不到商品，抛出错误\r\n      throw new Error(`商品不存在，ID: ${id}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 搜索商品\r\n   */\r\n  static async searchProducts(params: ProductSearchParams): Promise<PageResult<Product>> {\r\n    try {\r\n      const response = await api.get<ApiResponse<PageResult<Product>>>('/api/products/search', { params });\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error('搜索商品失败，使用模拟数据:', error);\r\n      \r\n      // 使用模拟数据\r\n      let filteredProducts = [...mockProducts];\r\n      \r\n      // 应用关键词搜索\r\n      if (params.keyword) {\r\n        const keyword = params.keyword.toLowerCase();\r\n        filteredProducts = filteredProducts.filter(p => \r\n          p.name.toLowerCase().includes(keyword) || \r\n          p.description.toLowerCase().includes(keyword) ||\r\n          p.categoryName?.toLowerCase().includes(keyword)\r\n        );\r\n      }\r\n      \r\n      // 应用分类筛选\r\n      if (params.categoryId) {\r\n        filteredProducts = filteredProducts.filter(p => p.categoryId === params.categoryId);\r\n      }\r\n      \r\n      // 应用排序\r\n      if (params.sortBy) {\r\n        if (params.sortBy === 'price_asc') {\r\n          filteredProducts.sort((a, b) => a.price - b.price);\r\n        } else if (params.sortBy === 'price_desc') {\r\n          filteredProducts.sort((a, b) => b.price - a.price);\r\n        } else if (params.sortBy === 'sales_desc') {\r\n          filteredProducts.sort((a, b) => b.salesCount - a.salesCount);\r\n        }\r\n      }\r\n      \r\n      // 分页处理\r\n      const current = params.current || 1;\r\n      const size = params.size || 10;\r\n      const start = (current - 1) * size;\r\n      const end = start + size;\r\n      const records = filteredProducts.slice(start, end);\r\n      const total = filteredProducts.length;\r\n      const pages = Math.ceil(total / size);\r\n      \r\n      return {\r\n        records,\r\n        total,\r\n        current,\r\n        size,\r\n        pages\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有分类\r\n   */\r\n  static async getAllCategories(): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>('/api/categories');\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 获取顶级分类\r\n   */\r\n  static async getTopCategories(): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>('/api/categories/top');\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据父分类ID获取子分类\r\n   */\r\n  static async getCategoriesByParentId(parentId: number): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>(`/api/categories/parent/${parentId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据ID获取分类详情\r\n   */\r\n  static async getCategoryById(id: number): Promise<Category> {\r\n    const response = await api.get<ApiResponse<Category>>(`/api/categories/${id}`);\r\n    return response.data.data;\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}