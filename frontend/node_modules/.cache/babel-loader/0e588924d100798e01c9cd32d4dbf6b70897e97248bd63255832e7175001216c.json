{"ast":null,"code":"import api from './api';\n\n/**\r\n * 支付请求参数\r\n */\n\n/**\r\n * 支付响应\r\n */\n\n/**\r\n * 支付服务类\r\n */\nexport class PaymentService {\n  /**\r\n   * 获取用户信用卡列表\r\n   */\n  static async getUserCreditCards(userId) {\n    const response = await api.get(`/api/payments/credit-cards/${userId}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 添加信用卡\r\n   */\n  static async addCreditCard(userId, cardData) {\n    const response = await api.post(`/api/payments/credit-cards/${userId}`, cardData);\n    return response.data.data;\n  }\n\n  /**\r\n   * 设置默认信用卡\r\n   */\n  static async setDefaultCreditCard(userId, cardId) {\n    const response = await api.put(`/api/payments/credit-cards/${userId}/default/${cardId}`);\n    return response.data.message;\n  }\n\n  /**\r\n   * 删除信用卡\r\n   */\n  static async deleteCreditCard(userId, cardId) {\n    const response = await api.delete(`/api/payments/credit-cards/${userId}/${cardId}`);\n    return response.data.message;\n  }\n\n  /**\r\n   * 获取可用分期方案列表\r\n   */\n  static async getAvailableInstallmentPlans(amount) {\n    const response = await api.get(`/api/payments/installment-plans`, {\n      params: {\n        amount\n      }\n    });\n    return response.data.data;\n  }\n\n  /**\r\n   * 计算分期付款详情\r\n   */\n  static async calculateInstallment(amount, installmentPlanId) {\n    const response = await api.get(`/api/payments/calculate-installment`, {\n      params: {\n        amount,\n        installmentPlanId\n      }\n    });\n    return response.data.data;\n  }\n\n  /**\r\n   * 支付订单\r\n   */\n  static async payOrder(userId, request) {\n    const response = await api.post(`/api/payments/${userId}/pay`, request);\n    return response.data.data;\n  }\n\n  /**\r\n   * 查询支付状态\r\n   */\n  static async queryPaymentStatus(paymentNo) {\n    const response = await api.get(`/api/payments/status/${paymentNo}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 获取支付宝支付二维码\r\n   */\n  static async getAlipayQRCode(userId, orderId, amount) {\n    const response = await api.post(`/api/payments/${userId}/alipay/qrcode`, {\n      orderId,\n      amount\n    });\n    return response.data.data;\n  }\n\n  /**\r\n   * 获取微信支付二维码\r\n   */\n  static async getWechatPayQRCode(userId, orderId, amount) {\n    const response = await api.post(`/api/payments/${userId}/wechat/qrcode`, {\n      orderId,\n      amount\n    });\n    return response.data.data;\n  }\n}","map":{"version":3,"names":["api","PaymentService","getUserCreditCards","userId","response","get","data","addCreditCard","cardData","post","setDefaultCreditCard","cardId","put","message","deleteCreditCard","delete","getAvailableInstallmentPlans","amount","params","calculateInstallment","installmentPlanId","payOrder","request","queryPaymentStatus","paymentNo","getAlipayQRCode","orderId","getWechatPayQRCode"],"sources":["D:/luckymall/frontend/src/services/paymentService.ts"],"sourcesContent":["import api from './api';\r\nimport { ApiResponse, InstallmentPlan, UserCreditCard, QRCodePaymentResponse } from '../types';\r\n\r\n/**\r\n * 支付请求参数\r\n */\r\nexport interface PaymentRequest {\r\n  orderId: number;\r\n  paymentMethod: string;\r\n  creditCardId?: number;\r\n  installmentPlanId?: number;\r\n  amount: number;\r\n}\r\n\r\n/**\r\n * 支付响应\r\n */\r\nexport interface PaymentResponse {\r\n  paymentId: number;\r\n  paymentNo: string;\r\n  status: string;\r\n  paymentTime: string;\r\n}\r\n\r\n/**\r\n * 支付服务类\r\n */\r\nexport class PaymentService {\r\n  /**\r\n   * 获取用户信用卡列表\r\n   */\r\n  static async getUserCreditCards(userId: number): Promise<UserCreditCard[]> {\r\n    const response = await api.get<ApiResponse<UserCreditCard[]>>(`/api/payments/credit-cards/${userId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 添加信用卡\r\n   */\r\n  static async addCreditCard(userId: number, cardData: Partial<UserCreditCard>): Promise<UserCreditCard> {\r\n    const response = await api.post<ApiResponse<UserCreditCard>>(`/api/payments/credit-cards/${userId}`, cardData);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 设置默认信用卡\r\n   */\r\n  static async setDefaultCreditCard(userId: number, cardId: number): Promise<string> {\r\n    const response = await api.put<ApiResponse<string>>(`/api/payments/credit-cards/${userId}/default/${cardId}`);\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 删除信用卡\r\n   */\r\n  static async deleteCreditCard(userId: number, cardId: number): Promise<string> {\r\n    const response = await api.delete<ApiResponse<string>>(`/api/payments/credit-cards/${userId}/${cardId}`);\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 获取可用分期方案列表\r\n   */\r\n  static async getAvailableInstallmentPlans(amount: number): Promise<InstallmentPlan[]> {\r\n    const response = await api.get<ApiResponse<InstallmentPlan[]>>(`/api/payments/installment-plans`, {\r\n      params: { amount }\r\n    });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 计算分期付款详情\r\n   */\r\n  static async calculateInstallment(amount: number, installmentPlanId: number): Promise<{\r\n    monthlyAmount: number;\r\n    totalAmount: number;\r\n    interestAmount: number;\r\n  }> {\r\n    const response = await api.get<ApiResponse<{\r\n      monthlyAmount: number;\r\n      totalAmount: number;\r\n      interestAmount: number;\r\n    }>>(`/api/payments/calculate-installment`, {\r\n      params: { amount, installmentPlanId }\r\n    });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 支付订单\r\n   */\r\n  static async payOrder(userId: number, request: PaymentRequest): Promise<PaymentResponse> {\r\n    const response = await api.post<ApiResponse<PaymentResponse>>(`/api/payments/${userId}/pay`, request);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 查询支付状态\r\n   */\r\n  static async queryPaymentStatus(paymentNo: string): Promise<string> {\r\n    const response = await api.get<ApiResponse<string>>(`/api/payments/status/${paymentNo}`);\r\n    return response.data.data;\r\n  }\r\n  \r\n  /**\r\n   * 获取支付宝支付二维码\r\n   */\r\n  static async getAlipayQRCode(userId: number, orderId: number, amount: number): Promise<QRCodePaymentResponse> {\r\n    const response = await api.post<ApiResponse<QRCodePaymentResponse>>(`/api/payments/${userId}/alipay/qrcode`, {\r\n      orderId,\r\n      amount\r\n    });\r\n    return response.data.data;\r\n  }\r\n  \r\n  /**\r\n   * 获取微信支付二维码\r\n   */\r\n  static async getWechatPayQRCode(userId: number, orderId: number, amount: number): Promise<QRCodePaymentResponse> {\r\n    const response = await api.post<ApiResponse<QRCodePaymentResponse>>(`/api/payments/${userId}/wechat/qrcode`, {\r\n      orderId,\r\n      amount\r\n    });\r\n    return response.data.data;\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}