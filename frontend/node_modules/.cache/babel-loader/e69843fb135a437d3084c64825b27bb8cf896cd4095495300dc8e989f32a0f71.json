{"ast":null,"code":"var _jsxFileName = \"D:\\\\luckymall\\\\frontend\\\\src\\\\components\\\\CustomerService.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Input, Spin, Avatar, Badge, Drawer, message, Tooltip } from 'antd';\nimport { SendOutlined, CustomerServiceOutlined, CloseOutlined, UserOutlined } from '@ant-design/icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../styles/CustomerService.css';\nimport { sendChatMessage } from '../services/chatService';\nimport HumanServiceTransfer from './HumanServiceTransfer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerService = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [humanServiceVisible, setHumanServiceVisible] = useState(false);\n  const [isHumanServiceMode, setIsHumanServiceMode] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // 初始化会话ID\n  useEffect(() => {\n    const storedSessionId = localStorage.getItem('chatSessionId');\n    if (storedSessionId) {\n      setSessionId(storedSessionId);\n    } else {\n      const newSessionId = uuidv4();\n      setSessionId(newSessionId);\n      localStorage.setItem('chatSessionId', newSessionId);\n    }\n  }, []);\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // 显示客服窗口\n  const showDrawer = () => {\n    setVisible(true);\n    // 如果是首次打开，显示欢迎消息\n    if (messages.length === 0) {\n      setMessages([{\n        id: uuidv4(),\n        content: '您好！我是招财商城的智能客服助手，有什么可以帮您的吗？',\n        sender: 'bot',\n        timestamp: new Date()\n      }]);\n    }\n  };\n\n  // 关闭客服窗口\n  const closeDrawer = () => {\n    setVisible(false);\n  };\n\n  // 请求人工客服\n  const requestHumanService = () => {\n    setHumanServiceVisible(true);\n  };\n\n  // 取消人工客服请求\n  const cancelHumanService = () => {\n    setHumanServiceVisible(false);\n  };\n\n  // 完成人工客服转接\n  const completeHumanService = () => {\n    setHumanServiceVisible(false);\n    setIsHumanServiceMode(true);\n\n    // 添加系统消息\n    const systemMessage = {\n      id: uuidv4(),\n      content: '您已成功接入人工客服，请开始对话。',\n      sender: 'human',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, systemMessage]);\n  };\n\n  // 发送消息\n  const handleSend = async () => {\n    if (!inputValue.trim()) return;\n\n    // 添加用户消息到列表\n    const userMessage = {\n      id: uuidv4(),\n      content: inputValue,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setLoading(true);\n\n    // 如果是人工客服模式，直接模拟人工回复\n    if (isHumanServiceMode) {\n      setTimeout(() => {\n        const humanResponse = {\n          id: uuidv4(),\n          content: '您好，我是人工客服小王，很高兴为您服务。请问有什么可以帮助您的？',\n          sender: 'human',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, humanResponse]);\n        setLoading(false);\n      }, 1000);\n      return;\n    }\n    try {\n      // 调用后端API\n      const response = await sendChatMessage({\n        userId: 'web-user',\n        sessionId: sessionId,\n        message: inputValue,\n        context: {}\n      });\n\n      // 检查是否需要转人工\n      if (response.result && response.result.includes('已将您的对话转接给人工客服')) {\n        // 显示转人工界面\n        setHumanServiceVisible(true);\n      }\n\n      // 添加机器人回复\n      const botMessage = {\n        id: uuidv4(),\n        content: response.result || '抱歉，我暂时无法回答您的问题。',\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      message.error('发送消息失败，请稍后再试');\n\n      // 添加错误提示\n      const errorMessage = {\n        id: uuidv4(),\n        content: '抱歉，系统暂时无法回应，请稍后再试。',\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理按键事件\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Badge, {\n      dot: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this),\n        size: \"large\",\n        className: \"customer-service-button\",\n        onClick: showDrawer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: isHumanServiceMode ? \"人工客服\" : \"智能客服\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), !isHumanServiceMode && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u8F6C\\u4EBA\\u5DE5\\u5BA2\\u670D\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this),\n            onClick: requestHumanService,\n            size: \"small\",\n            children: \"\\u8F6C\\u4EBA\\u5DE5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this),\n      placement: \"right\",\n      onClose: closeDrawer,\n      open: visible,\n      width: 320,\n      closeIcon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 20\n      }, this),\n      className: \"customer-service-drawer\",\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898...\",\n          disabled: loading,\n          className: \"customer-service-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this),\n          onClick: handleSend,\n          disabled: loading || !inputValue.trim(),\n          className: \"customer-service-send-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-messages\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble ${msg.sender === 'user' ? 'user-message' : msg.sender === 'human' ? 'human-message' : 'bot-message'}`,\n          children: [msg.sender !== 'user' && /*#__PURE__*/_jsxDEV(Avatar, {\n            className: msg.sender === 'human' ? 'human-avatar' : 'bot-avatar',\n            icon: msg.sender === 'human' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: msg.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: isHumanServiceMode ? 'human-avatar' : 'bot-avatar',\n            icon: isHumanServiceMode ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content loading-content\",\n            children: /*#__PURE__*/_jsxDEV(Spin, {\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HumanServiceTransfer, {\n      visible: humanServiceVisible,\n      userId: \"web-user\",\n      sessionId: sessionId,\n      onCancel: cancelHumanService,\n      onComplete: completeHumanService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomerService, \"BlxpS9YEyudBNcEubbIGyv+TlK0=\");\n_c = CustomerService;\nexport default CustomerService;\nvar _c;\n$RefreshReg$(_c, \"CustomerService\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Input","Spin","Avatar","Badge","Drawer","message","Tooltip","SendOutlined","CustomerServiceOutlined","CloseOutlined","UserOutlined","v4","uuidv4","sendChatMessage","HumanServiceTransfer","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerService","_s","visible","setVisible","messages","setMessages","inputValue","setInputValue","loading","setLoading","sessionId","setSessionId","humanServiceVisible","setHumanServiceVisible","isHumanServiceMode","setIsHumanServiceMode","messagesEndRef","storedSessionId","localStorage","getItem","newSessionId","setItem","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","showDrawer","length","id","content","sender","timestamp","Date","closeDrawer","requestHumanService","cancelHumanService","completeHumanService","systemMessage","prev","handleSend","trim","userMessage","setTimeout","humanResponse","response","userId","context","result","includes","botMessage","error","console","errorMessage","handleKeyPress","e","key","children","dot","type","shape","icon","fileName","_jsxFileName","lineNumber","columnNumber","size","className","onClick","title","placement","onClose","open","width","closeIcon","footer","value","onChange","target","onKeyPress","placeholder","disabled","map","msg","toLocaleTimeString","hour","minute","ref","onCancel","onComplete","_c","$RefreshReg$"],"sources":["D:/luckymall/frontend/src/components/CustomerService.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Input, Spin, Avatar, Badge, Drawer, message, Tooltip } from 'antd';\r\nimport { SendOutlined, CustomerServiceOutlined, CloseOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../styles/CustomerService.css';\r\nimport { sendChatMessage, ChatResponse } from '../services/chatService';\r\nimport HumanServiceTransfer from './HumanServiceTransfer';\r\n\r\ninterface Message {\r\n  id: string;\r\n  content: string;\r\n  sender: 'user' | 'bot' | 'human';\r\n  timestamp: Date;\r\n}\r\n\r\nconst CustomerService: React.FC = () => {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [sessionId, setSessionId] = useState<string>('');\r\n  const [humanServiceVisible, setHumanServiceVisible] = useState<boolean>(false);\r\n  const [isHumanServiceMode, setIsHumanServiceMode] = useState<boolean>(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // 初始化会话ID\r\n  useEffect(() => {\r\n    const storedSessionId = localStorage.getItem('chatSessionId');\r\n    if (storedSessionId) {\r\n      setSessionId(storedSessionId);\r\n    } else {\r\n      const newSessionId = uuidv4();\r\n      setSessionId(newSessionId);\r\n      localStorage.setItem('chatSessionId', newSessionId);\r\n    }\r\n  }, []);\r\n\r\n  // 自动滚动到最新消息\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // 显示客服窗口\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n    // 如果是首次打开，显示欢迎消息\r\n    if (messages.length === 0) {\r\n      setMessages([\r\n        {\r\n          id: uuidv4(),\r\n          content: '您好！我是招财商城的智能客服助手，有什么可以帮您的吗？',\r\n          sender: 'bot',\r\n          timestamp: new Date()\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // 关闭客服窗口\r\n  const closeDrawer = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  // 请求人工客服\r\n  const requestHumanService = () => {\r\n    setHumanServiceVisible(true);\r\n  };\r\n\r\n  // 取消人工客服请求\r\n  const cancelHumanService = () => {\r\n    setHumanServiceVisible(false);\r\n  };\r\n\r\n  // 完成人工客服转接\r\n  const completeHumanService = () => {\r\n    setHumanServiceVisible(false);\r\n    setIsHumanServiceMode(true);\r\n    \r\n    // 添加系统消息\r\n    const systemMessage: Message = {\r\n      id: uuidv4(),\r\n      content: '您已成功接入人工客服，请开始对话。',\r\n      sender: 'human',\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, systemMessage]);\r\n  };\r\n\r\n  // 发送消息\r\n  const handleSend = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    // 添加用户消息到列表\r\n    const userMessage: Message = {\r\n      id: uuidv4(),\r\n      content: inputValue,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setLoading(true);\r\n\r\n    // 如果是人工客服模式，直接模拟人工回复\r\n    if (isHumanServiceMode) {\r\n      setTimeout(() => {\r\n        const humanResponse: Message = {\r\n          id: uuidv4(),\r\n          content: '您好，我是人工客服小王，很高兴为您服务。请问有什么可以帮助您的？',\r\n          sender: 'human',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, humanResponse]);\r\n        setLoading(false);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 调用后端API\r\n      const response = await sendChatMessage({\r\n        userId: 'web-user',\r\n        sessionId: sessionId,\r\n        message: inputValue,\r\n        context: {}\r\n      });\r\n\r\n      // 检查是否需要转人工\r\n      if (response.result && response.result.includes('已将您的对话转接给人工客服')) {\r\n        // 显示转人工界面\r\n        setHumanServiceVisible(true);\r\n      }\r\n\r\n      // 添加机器人回复\r\n      const botMessage: Message = {\r\n        id: uuidv4(),\r\n        content: response.result || '抱歉，我暂时无法回答您的问题。',\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      message.error('发送消息失败，请稍后再试');\r\n      \r\n      // 添加错误提示\r\n      const errorMessage: Message = {\r\n        id: uuidv4(),\r\n        content: '抱歉，系统暂时无法回应，请稍后再试。',\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理按键事件\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      <Badge dot>\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          icon={<CustomerServiceOutlined />}\r\n          size=\"large\"\r\n          className=\"customer-service-button\"\r\n          onClick={showDrawer}\r\n        />\r\n      </Badge>\r\n\r\n      {/* 聊天抽屉 */}\r\n      <Drawer\r\n        title={\r\n          <div className=\"customer-service-header\">\r\n            <span>{isHumanServiceMode ? \"人工客服\" : \"智能客服\"}</span>\r\n            {!isHumanServiceMode && (\r\n              <Tooltip title=\"转人工客服\">\r\n                <Button \r\n                  type=\"link\" \r\n                  icon={<UserOutlined />} \r\n                  onClick={requestHumanService}\r\n                  size=\"small\"\r\n                >\r\n                  转人工\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n          </div>\r\n        }\r\n        placement=\"right\"\r\n        onClose={closeDrawer}\r\n        open={visible}\r\n        width={320}\r\n        closeIcon={<CloseOutlined />}\r\n        className=\"customer-service-drawer\"\r\n        footer={\r\n          <div className=\"customer-service-footer\">\r\n            <Input\r\n              value={inputValue}\r\n              onChange={e => setInputValue(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"请输入您的问题...\"\r\n              disabled={loading}\r\n              className=\"customer-service-input\"\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<SendOutlined />}\r\n              onClick={handleSend}\r\n              disabled={loading || !inputValue.trim()}\r\n              className=\"customer-service-send-button\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <div className=\"customer-service-messages\">\r\n          {messages.map(msg => (\r\n            <div\r\n              key={msg.id}\r\n              className={`message-bubble ${\r\n                msg.sender === 'user' \r\n                  ? 'user-message' \r\n                  : msg.sender === 'human' \r\n                    ? 'human-message' \r\n                    : 'bot-message'\r\n              }`}\r\n            >\r\n              {msg.sender !== 'user' && (\r\n                <Avatar \r\n                  className={msg.sender === 'human' ? 'human-avatar' : 'bot-avatar'} \r\n                  icon={msg.sender === 'human' ? <UserOutlined /> : <CustomerServiceOutlined />} \r\n                />\r\n              )}\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\">{msg.content}</div>\r\n                <div className=\"message-time\">\r\n                  {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {loading && (\r\n            <div className=\"message-bubble bot-message\">\r\n              <Avatar \r\n                className={isHumanServiceMode ? 'human-avatar' : 'bot-avatar'} \r\n                icon={isHumanServiceMode ? <UserOutlined /> : <CustomerServiceOutlined />} \r\n              />\r\n              <div className=\"message-content loading-content\">\r\n                <Spin size=\"small\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </Drawer>\r\n\r\n      {/* 人工客服转接界面 */}\r\n      <HumanServiceTransfer\r\n        visible={humanServiceVisible}\r\n        userId=\"web-user\"\r\n        sessionId={sessionId}\r\n        onCancel={cancelHumanService}\r\n        onComplete={completeHumanService}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerService; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,QAAQ,MAAM;AACnF,SAASC,YAAY,EAAEC,uBAAuB,EAAEC,aAAa,EAAEC,YAAY,QAAQ,mBAAmB;AACtG,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAO,+BAA+B;AACtC,SAASC,eAAe,QAAsB,yBAAyB;AACvE,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAS1D,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACmC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpC,QAAQ,CAAU,KAAK,CAAC;EAC9E,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAU,KAAK,CAAC;EAC5E,MAAMuC,cAAc,GAAGrC,MAAM,CAAiB,IAAI,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMuC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC7D,IAAIF,eAAe,EAAE;MACnBN,YAAY,CAACM,eAAe,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMG,YAAY,GAAG3B,MAAM,CAAC,CAAC;MAC7BkB,YAAY,CAACS,YAAY,CAAC;MAC1BF,YAAY,CAACG,OAAO,CAAC,eAAe,EAAED,YAAY,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA1C,SAAS,CAAC,MAAM;IACd4C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAP,cAAc,CAACQ,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBxB,UAAU,CAAC,IAAI,CAAC;IAChB;IACA,IAAIC,QAAQ,CAACwB,MAAM,KAAK,CAAC,EAAE;MACzBvB,WAAW,CAAC,CACV;QACEwB,EAAE,EAAEpC,MAAM,CAAC,CAAC;QACZqC,OAAO,EAAE,6BAA6B;QACtCC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CACF,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB/B,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMgC,mBAAmB,GAAGA,CAAA,KAAM;IAChCtB,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMuB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BvB,sBAAsB,CAAC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMwB,oBAAoB,GAAGA,CAAA,KAAM;IACjCxB,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,qBAAqB,CAAC,IAAI,CAAC;;IAE3B;IACA,MAAMuB,aAAsB,GAAG;MAC7BT,EAAE,EAAEpC,MAAM,CAAC,CAAC;MACZqC,OAAO,EAAE,mBAAmB;MAC5BC,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE,IAAIC,IAAI,CAAC;IACtB,CAAC;IAED5B,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,aAAa,CAAC,CAAC;EAC/C,CAAC;;EAED;EACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAClC,UAAU,CAACmC,IAAI,CAAC,CAAC,EAAE;;IAExB;IACA,MAAMC,WAAoB,GAAG;MAC3Bb,EAAE,EAAEpC,MAAM,CAAC,CAAC;MACZqC,OAAO,EAAExB,UAAU;MACnByB,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIC,IAAI,CAAC;IACtB,CAAC;IAED5B,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,WAAW,CAAC,CAAC;IAC3CnC,aAAa,CAAC,EAAE,CAAC;IACjBE,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,IAAIK,kBAAkB,EAAE;MACtB6B,UAAU,CAAC,MAAM;QACf,MAAMC,aAAsB,GAAG;UAC7Bf,EAAE,EAAEpC,MAAM,CAAC,CAAC;UACZqC,OAAO,EAAE,kCAAkC;UAC3CC,MAAM,EAAE,OAAO;UACfC,SAAS,EAAE,IAAIC,IAAI,CAAC;QACtB,CAAC;QACD5B,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,aAAa,CAAC,CAAC;QAC7CnC,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;MACR;IACF;IAEA,IAAI;MACF;MACA,MAAMoC,QAAQ,GAAG,MAAMnD,eAAe,CAAC;QACrCoD,MAAM,EAAE,UAAU;QAClBpC,SAAS,EAAEA,SAAS;QACpBxB,OAAO,EAAEoB,UAAU;QACnByC,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC;;MAEF;MACA,IAAIF,QAAQ,CAACG,MAAM,IAAIH,QAAQ,CAACG,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;QAChE;QACApC,sBAAsB,CAAC,IAAI,CAAC;MAC9B;;MAEA;MACA,MAAMqC,UAAmB,GAAG;QAC1BrB,EAAE,EAAEpC,MAAM,CAAC,CAAC;QACZqC,OAAO,EAAEe,QAAQ,CAACG,MAAM,IAAI,iBAAiB;QAC7CjB,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAED5B,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEW,UAAU,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CjE,OAAO,CAACiE,KAAK,CAAC,cAAc,CAAC;;MAE7B;MACA,MAAME,YAAqB,GAAG;QAC5BxB,EAAE,EAAEpC,MAAM,CAAC,CAAC;QACZqC,OAAO,EAAE,oBAAoB;QAC7BC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAED5B,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEc,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACR5C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM6C,cAAc,GAAIC,CAAwC,IAAK;IACnE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBhB,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACE3C,OAAA,CAAAE,SAAA;IAAA0D,QAAA,gBAEE5D,OAAA,CAACb,KAAK;MAAC0E,GAAG;MAAAD,QAAA,eACR5D,OAAA,CAACjB,MAAM;QACL+E,IAAI,EAAC,SAAS;QACdC,KAAK,EAAC,QAAQ;QACdC,IAAI,eAAEhE,OAAA,CAACR,uBAAuB;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAClCC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAC,yBAAyB;QACnCC,OAAO,EAAEzC;MAAW;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGRpE,OAAA,CAACZ,MAAM;MACLoF,KAAK,eACHxE,OAAA;QAAKsE,SAAS,EAAC,yBAAyB;QAAAV,QAAA,gBACtC5D,OAAA;UAAA4D,QAAA,EAAO3C,kBAAkB,GAAG,MAAM,GAAG;QAAM;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAClD,CAACnD,kBAAkB,iBAClBjB,OAAA,CAACV,OAAO;UAACkF,KAAK,EAAC,gCAAO;UAAAZ,QAAA,eACpB5D,OAAA,CAACjB,MAAM;YACL+E,IAAI,EAAC,MAAM;YACXE,IAAI,eAAEhE,OAAA,CAACN,YAAY;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACvBG,OAAO,EAAEjC,mBAAoB;YAC7B+B,IAAI,EAAC,OAAO;YAAAT,QAAA,EACb;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;MACDK,SAAS,EAAC,OAAO;MACjBC,OAAO,EAAErC,WAAY;MACrBsC,IAAI,EAAEtE,OAAQ;MACduE,KAAK,EAAE,GAAI;MACXC,SAAS,eAAE7E,OAAA,CAACP,aAAa;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAC7BE,SAAS,EAAC,yBAAyB;MACnCQ,MAAM,eACJ9E,OAAA;QAAKsE,SAAS,EAAC,yBAAyB;QAAAV,QAAA,gBACtC5D,OAAA,CAAChB,KAAK;UACJ+F,KAAK,EAAEtE,UAAW;UAClBuE,QAAQ,EAAEtB,CAAC,IAAIhD,aAAa,CAACgD,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC7CG,UAAU,EAAEzB,cAAe;UAC3B0B,WAAW,EAAC,+CAAY;UACxBC,QAAQ,EAAEzE,OAAQ;UAClB2D,SAAS,EAAC;QAAwB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFpE,OAAA,CAACjB,MAAM;UACL+E,IAAI,EAAC,SAAS;UACdE,IAAI,eAAEhE,OAAA,CAACT,YAAY;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBG,OAAO,EAAE5B,UAAW;UACpByC,QAAQ,EAAEzE,OAAO,IAAI,CAACF,UAAU,CAACmC,IAAI,CAAC,CAAE;UACxC0B,SAAS,EAAC;QAA8B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;MAAAR,QAAA,eAED5D,OAAA;QAAKsE,SAAS,EAAC,2BAA2B;QAAAV,QAAA,GACvCrD,QAAQ,CAAC8E,GAAG,CAACC,GAAG,iBACftF,OAAA;UAEEsE,SAAS,EAAE,kBACTgB,GAAG,CAACpD,MAAM,KAAK,MAAM,GACjB,cAAc,GACdoD,GAAG,CAACpD,MAAM,KAAK,OAAO,GACpB,eAAe,GACf,aAAa,EAClB;UAAA0B,QAAA,GAEF0B,GAAG,CAACpD,MAAM,KAAK,MAAM,iBACpBlC,OAAA,CAACd,MAAM;YACLoF,SAAS,EAAEgB,GAAG,CAACpD,MAAM,KAAK,OAAO,GAAG,cAAc,GAAG,YAAa;YAClE8B,IAAI,EAAEsB,GAAG,CAACpD,MAAM,KAAK,OAAO,gBAAGlC,OAAA,CAACN,YAAY;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGpE,OAAA,CAACR,uBAAuB;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CACF,eACDpE,OAAA;YAAKsE,SAAS,EAAC,iBAAiB;YAAAV,QAAA,gBAC9B5D,OAAA;cAAKsE,SAAS,EAAC,cAAc;cAAAV,QAAA,EAAE0B,GAAG,CAACrD;YAAO;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjDpE,OAAA;cAAKsE,SAAS,EAAC,cAAc;cAAAV,QAAA,EAC1B0B,GAAG,CAACnD,SAAS,CAACoD,kBAAkB,CAAC,EAAE,EAAE;gBAAEC,IAAI,EAAE,SAAS;gBAAEC,MAAM,EAAE;cAAU,CAAC;YAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GApBDkB,GAAG,CAACtD,EAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBR,CACN,CAAC,EACDzD,OAAO,iBACNX,OAAA;UAAKsE,SAAS,EAAC,4BAA4B;UAAAV,QAAA,gBACzC5D,OAAA,CAACd,MAAM;YACLoF,SAAS,EAAErD,kBAAkB,GAAG,cAAc,GAAG,YAAa;YAC9D+C,IAAI,EAAE/C,kBAAkB,gBAAGjB,OAAA,CAACN,YAAY;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGpE,OAAA,CAACR,uBAAuB;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC,eACFpE,OAAA;YAAKsE,SAAS,EAAC,iCAAiC;YAAAV,QAAA,eAC9C5D,OAAA,CAACf,IAAI;cAACoF,IAAI,EAAC;YAAO;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eACDpE,OAAA;UAAK0F,GAAG,EAAEvE;QAAe;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGTpE,OAAA,CAACF,oBAAoB;MACnBO,OAAO,EAAEU,mBAAoB;MAC7BkC,MAAM,EAAC,UAAU;MACjBpC,SAAS,EAAEA,SAAU;MACrB8E,QAAQ,EAAEpD,kBAAmB;MAC7BqD,UAAU,EAAEpD;IAAqB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAChE,EAAA,CA5QID,eAAyB;AAAA0F,EAAA,GAAzB1F,eAAyB;AA8Q/B,eAAeA,eAAe;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}