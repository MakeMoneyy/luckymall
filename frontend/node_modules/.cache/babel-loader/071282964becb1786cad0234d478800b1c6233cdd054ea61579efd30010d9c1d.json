{"ast":null,"code":"var _jsxFileName = \"D:\\\\luckymall\\\\frontend\\\\src\\\\components\\\\CustomerService.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Spin, Avatar, Badge, Drawer, message, Tooltip } from 'antd';\nimport { CustomerServiceOutlined, CloseOutlined, UserOutlined } from '@ant-design/icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../styles/CustomerService.css';\nimport { sendChatMessage } from '../services/chatService';\nimport HumanServiceTransfer from './HumanServiceTransfer';\nimport NaturalLanguageInput from './NaturalLanguageInput';\nimport EmotionDisplay from './EmotionDisplay';\nimport StructuredInfoCard, { CardType, OrderStatus, LogisticsStatus } from './StructuredInfoCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerService = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [humanServiceVisible, setHumanServiceVisible] = useState(false);\n  const [isHumanServiceMode, setIsHumanServiceMode] = useState(false);\n  const [showEmotionDetails, setShowEmotionDetails] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // 初始化会话ID\n  useEffect(() => {\n    const storedSessionId = localStorage.getItem('chatSessionId');\n    if (storedSessionId) {\n      setSessionId(storedSessionId);\n    } else {\n      const newSessionId = uuidv4();\n      setSessionId(newSessionId);\n      localStorage.setItem('chatSessionId', newSessionId);\n    }\n  }, []);\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // 显示客服窗口\n  const showDrawer = () => {\n    setVisible(true);\n    // 如果是首次打开，显示欢迎消息\n    if (messages.length === 0) {\n      setMessages([{\n        id: uuidv4(),\n        content: '您好！我是招财商城的智能客服助手，有什么可以帮您的吗？',\n        sender: 'bot',\n        timestamp: new Date()\n      }]);\n    }\n  };\n\n  // 关闭客服窗口\n  const closeDrawer = () => {\n    setVisible(false);\n  };\n\n  // 请求人工客服\n  const requestHumanService = () => {\n    setHumanServiceVisible(true);\n  };\n\n  // 取消人工客服请求\n  const cancelHumanService = () => {\n    setHumanServiceVisible(false);\n  };\n\n  // 完成人工客服转接\n  const completeHumanService = () => {\n    setHumanServiceVisible(false);\n    setIsHumanServiceMode(true);\n\n    // 添加系统消息\n    const systemMessage = {\n      id: uuidv4(),\n      content: '您已成功接入人工客服，请开始对话。',\n      sender: 'human',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, systemMessage]);\n  };\n\n  // 处理自然语言输入\n  const handleNaturalLanguageSearch = query => {\n    handleSendMessage(query);\n  };\n\n  // 发送消息\n  const handleSendMessage = async messageText => {\n    if (!messageText.trim()) return;\n\n    // 添加用户消息到列表\n    const userMessage = {\n      id: uuidv4(),\n      content: messageText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setLoading(true);\n\n    // 如果是人工客服模式，直接模拟人工回复\n    if (isHumanServiceMode) {\n      setTimeout(() => {\n        const humanResponse = {\n          id: uuidv4(),\n          content: '您好，我是人工客服小王，很高兴为您服务。请问有什么可以帮助您的？',\n          sender: 'human',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, humanResponse]);\n        setLoading(false);\n      }, 1000);\n      return;\n    }\n    try {\n      // 调用后端API\n      const response = await sendChatMessage({\n        userId: 'web-user',\n        sessionId: sessionId,\n        message: messageText,\n        context: {}\n      });\n\n      // 检查是否需要转人工\n      if (response.result && response.result.includes('已将您的对话转接给人工客服')) {\n        // 显示转人工界面\n        setHumanServiceVisible(true);\n      }\n\n      // 解析结构化数据（模拟，实际应该从后端返回）\n      const structuredData = parseStructuredData(messageText, response);\n\n      // 解析情感数据（模拟，实际应该从后端返回）\n      const emotionData = parseEmotionData(messageText);\n\n      // 添加机器人回复\n      const botMessage = {\n        id: uuidv4(),\n        content: response.result || '抱歉，我暂时无法回答您的问题。',\n        sender: 'bot',\n        timestamp: new Date(),\n        structuredData,\n        emotion: emotionData\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      message.error('发送消息失败，请稍后再试');\n\n      // 添加错误提示\n      const errorMessage = {\n        id: uuidv4(),\n        content: '抱歉，系统暂时无法回应，请稍后再试。',\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理按键事件\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage(inputValue);\n    }\n  };\n\n  // 解析结构化数据（模拟）\n  const parseStructuredData = (message, response) => {\n    // 这里应该是根据后端返回的数据进行解析\n    // 这里只是模拟一些示例数据\n\n    if (message.toLowerCase().includes('订单')) {\n      return {\n        type: CardType.ORDER,\n        title: '订单信息',\n        orderNumber: 'ORD12345678',\n        orderDate: '2023-05-20',\n        status: OrderStatus.SHIPPED,\n        items: [{\n          name: 'iPhone 13 Pro Max',\n          quantity: 1,\n          price: 8999\n        }, {\n          name: '手机保护壳',\n          quantity: 2,\n          price: 99\n        }],\n        totalAmount: 9197\n      };\n    }\n    if (message.toLowerCase().includes('物流')) {\n      return {\n        type: CardType.LOGISTICS,\n        title: '物流信息',\n        trackingNumber: 'SF1234567890',\n        carrier: '顺丰速运',\n        status: LogisticsStatus.IN_TRANSIT,\n        estimatedDelivery: '2023-05-25',\n        events: [{\n          time: '2023-05-22 10:30',\n          location: '上海分拣中心',\n          description: '已发出'\n        }, {\n          time: '2023-05-21 18:45',\n          location: '广州转运中心',\n          description: '运输中'\n        }, {\n          time: '2023-05-21 09:20',\n          location: '广州仓库',\n          description: '已出库'\n        }]\n      };\n    }\n    if (message.toLowerCase().includes('积分')) {\n      return {\n        type: CardType.POINTS,\n        title: '积分信息',\n        balance: 8500,\n        expiring: {\n          amount: 2000,\n          date: '2023-06-30'\n        },\n        recentTransactions: [{\n          date: '2023-05-15',\n          description: '购物消费',\n          amount: 500,\n          isEarned: true\n        }, {\n          date: '2023-05-10',\n          description: '积分兑换',\n          amount: 1000,\n          isEarned: false\n        }, {\n          date: '2023-05-01',\n          description: '生日奖励',\n          amount: 200,\n          isEarned: true\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  // 解析情感数据（模拟）\n  const parseEmotionData = message => {\n    // 这里应该是根据后端返回的数据进行解析\n    // 这里只是模拟一些示例数据\n\n    const lowerMessage = message.toLowerCase();\n\n    // 检测正面情绪\n    if (lowerMessage.includes('谢谢') || lowerMessage.includes('感谢') || lowerMessage.includes('好的') || lowerMessage.includes('满意')) {\n      return {\n        type: 'POSITIVE',\n        intensity: 4,\n        keywords: ['感谢', '满意'],\n        trend: 'IMPROVING'\n      };\n    }\n\n    // 检测负面情绪\n    if (lowerMessage.includes('不满') || lowerMessage.includes('差') || lowerMessage.includes('退款') || lowerMessage.includes('投诉')) {\n      return {\n        type: 'NEGATIVE',\n        intensity: 2,\n        keywords: ['不满', '投诉'],\n        trend: 'DETERIORATING'\n      };\n    }\n\n    // 默认中性\n    return {\n      type: 'NEUTRAL',\n      intensity: 3,\n      trend: 'STABLE'\n    };\n  };\n\n  // 渲染消息内容\n  const renderMessageContent = msg => {\n    // 如果有结构化数据，渲染结构化卡片\n    if (msg.structuredData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-structured-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StructuredInfoCard, {\n          ...msg.structuredData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this);\n    }\n\n    // 否则渲染普通文本\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-text\",\n      children: msg.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 12\n    }, this);\n  };\n\n  // 渲染情感指示器\n  const renderEmotionIndicator = msg => {\n    if (msg.sender !== 'user' || !msg.emotion) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-emotion\",\n      children: [/*#__PURE__*/_jsxDEV(EmotionDisplay, {\n        emotion: msg.emotion,\n        showDetails: showEmotionDetails,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), !showEmotionDetails && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        size: \"small\",\n        onClick: () => setShowEmotionDetails(true),\n        children: \"\\u67E5\\u770B\\u8BE6\\u60C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Badge, {\n      dot: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        icon: /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this),\n        size: \"large\",\n        className: \"customer-service-button\",\n        onClick: showDrawer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: isHumanServiceMode ? \"人工客服\" : \"智能客服\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), !isHumanServiceMode && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u8F6C\\u4EBA\\u5DE5\\u5BA2\\u670D\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 25\n            }, this),\n            onClick: requestHumanService,\n            size: \"small\",\n            children: \"\\u8F6C\\u4EBA\\u5DE5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this),\n      placement: \"right\",\n      onClose: closeDrawer,\n      open: visible,\n      width: 360,\n      closeIcon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 20\n      }, this),\n      className: \"customer-service-drawer\",\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-footer\",\n        children: /*#__PURE__*/_jsxDEV(NaturalLanguageInput, {\n          onSearch: handleNaturalLanguageSearch,\n          loading: loading,\n          placeholder: \"\\u60A8\\u53EF\\u4EE5\\u76F4\\u63A5\\u8BE2\\u95EE\\u5982'\\u67E5\\u8BE2\\u6211\\u6700\\u8FD1\\u7684\\u8BA2\\u5355'\\u6216'\\u6211\\u60F3\\u9000\\u8D27'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-service-messages\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble ${msg.sender === 'user' ? 'user-message' : msg.sender === 'human' ? 'human-message' : 'bot-message'}`,\n          children: [msg.sender !== 'user' && /*#__PURE__*/_jsxDEV(Avatar, {\n            className: msg.sender === 'human' ? 'human-avatar' : 'bot-avatar',\n            icon: msg.sender === 'human' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [renderMessageContent(msg), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: msg.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), renderEmotionIndicator(msg)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: isHumanServiceMode ? 'human-avatar' : 'bot-avatar',\n            icon: isHumanServiceMode ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(CustomerServiceOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content loading-content\",\n            children: /*#__PURE__*/_jsxDEV(Spin, {\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HumanServiceTransfer, {\n      visible: humanServiceVisible,\n      userId: \"web-user\",\n      sessionId: sessionId,\n      onCancel: cancelHumanService,\n      onComplete: completeHumanService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomerService, \"nsZFg/dhnV6WqNHx2z1AUpd51ic=\");\n_c = CustomerService;\nexport default CustomerService;\nvar _c;\n$RefreshReg$(_c, \"CustomerService\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Spin","Avatar","Badge","Drawer","message","Tooltip","CustomerServiceOutlined","CloseOutlined","UserOutlined","v4","uuidv4","sendChatMessage","HumanServiceTransfer","NaturalLanguageInput","EmotionDisplay","StructuredInfoCard","CardType","OrderStatus","LogisticsStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerService","_s","visible","setVisible","messages","setMessages","inputValue","setInputValue","loading","setLoading","sessionId","setSessionId","humanServiceVisible","setHumanServiceVisible","isHumanServiceMode","setIsHumanServiceMode","showEmotionDetails","setShowEmotionDetails","messagesEndRef","storedSessionId","localStorage","getItem","newSessionId","setItem","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","showDrawer","length","id","content","sender","timestamp","Date","closeDrawer","requestHumanService","cancelHumanService","completeHumanService","systemMessage","prev","handleNaturalLanguageSearch","query","handleSendMessage","messageText","trim","userMessage","setTimeout","humanResponse","response","userId","context","result","includes","structuredData","parseStructuredData","emotionData","parseEmotionData","botMessage","emotion","error","console","errorMessage","handleKeyPress","e","key","toLowerCase","type","ORDER","title","orderNumber","orderDate","status","SHIPPED","items","name","quantity","price","totalAmount","LOGISTICS","trackingNumber","carrier","IN_TRANSIT","estimatedDelivery","events","time","location","description","POINTS","balance","expiring","amount","date","recentTransactions","isEarned","undefined","lowerMessage","intensity","keywords","trend","renderMessageContent","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderEmotionIndicator","showDetails","size","onClick","dot","shape","icon","placement","onClose","open","width","closeIcon","footer","onSearch","placeholder","map","toLocaleTimeString","hour","minute","ref","onCancel","onComplete","_c","$RefreshReg$"],"sources":["D:/luckymall/frontend/src/components/CustomerService.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Input, Spin, Avatar, Badge, Drawer, message, Tooltip, Divider } from 'antd';\r\nimport { SendOutlined, CustomerServiceOutlined, CloseOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../styles/CustomerService.css';\r\nimport { sendChatMessage, ChatResponse } from '../services/chatService';\r\nimport HumanServiceTransfer from './HumanServiceTransfer';\r\nimport NaturalLanguageInput from './NaturalLanguageInput';\r\nimport EmotionDisplay, { EmotionData } from './EmotionDisplay';\r\nimport StructuredInfoCard, { CardType, OrderStatus, LogisticsStatus } from './StructuredInfoCard';\r\n\r\ninterface Message {\r\n  id: string;\r\n  content: string;\r\n  sender: 'user' | 'bot' | 'human';\r\n  timestamp: Date;\r\n  structuredData?: any;\r\n  emotion?: EmotionData;\r\n}\r\n\r\nconst CustomerService: React.FC = () => {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [sessionId, setSessionId] = useState<string>('');\r\n  const [humanServiceVisible, setHumanServiceVisible] = useState<boolean>(false);\r\n  const [isHumanServiceMode, setIsHumanServiceMode] = useState<boolean>(false);\r\n  const [showEmotionDetails, setShowEmotionDetails] = useState<boolean>(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // 初始化会话ID\r\n  useEffect(() => {\r\n    const storedSessionId = localStorage.getItem('chatSessionId');\r\n    if (storedSessionId) {\r\n      setSessionId(storedSessionId);\r\n    } else {\r\n      const newSessionId = uuidv4();\r\n      setSessionId(newSessionId);\r\n      localStorage.setItem('chatSessionId', newSessionId);\r\n    }\r\n  }, []);\r\n\r\n  // 自动滚动到最新消息\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // 显示客服窗口\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n    // 如果是首次打开，显示欢迎消息\r\n    if (messages.length === 0) {\r\n      setMessages([\r\n        {\r\n          id: uuidv4(),\r\n          content: '您好！我是招财商城的智能客服助手，有什么可以帮您的吗？',\r\n          sender: 'bot',\r\n          timestamp: new Date()\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // 关闭客服窗口\r\n  const closeDrawer = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  // 请求人工客服\r\n  const requestHumanService = () => {\r\n    setHumanServiceVisible(true);\r\n  };\r\n\r\n  // 取消人工客服请求\r\n  const cancelHumanService = () => {\r\n    setHumanServiceVisible(false);\r\n  };\r\n\r\n  // 完成人工客服转接\r\n  const completeHumanService = () => {\r\n    setHumanServiceVisible(false);\r\n    setIsHumanServiceMode(true);\r\n    \r\n    // 添加系统消息\r\n    const systemMessage: Message = {\r\n      id: uuidv4(),\r\n      content: '您已成功接入人工客服，请开始对话。',\r\n      sender: 'human',\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, systemMessage]);\r\n  };\r\n\r\n  // 处理自然语言输入\r\n  const handleNaturalLanguageSearch = (query: string) => {\r\n    handleSendMessage(query);\r\n  };\r\n\r\n  // 发送消息\r\n  const handleSendMessage = async (messageText: string) => {\r\n    if (!messageText.trim()) return;\r\n\r\n    // 添加用户消息到列表\r\n    const userMessage: Message = {\r\n      id: uuidv4(),\r\n      content: messageText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setLoading(true);\r\n\r\n    // 如果是人工客服模式，直接模拟人工回复\r\n    if (isHumanServiceMode) {\r\n      setTimeout(() => {\r\n        const humanResponse: Message = {\r\n          id: uuidv4(),\r\n          content: '您好，我是人工客服小王，很高兴为您服务。请问有什么可以帮助您的？',\r\n          sender: 'human',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, humanResponse]);\r\n        setLoading(false);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 调用后端API\r\n      const response = await sendChatMessage({\r\n        userId: 'web-user',\r\n        sessionId: sessionId,\r\n        message: messageText,\r\n        context: {}\r\n      });\r\n\r\n      // 检查是否需要转人工\r\n      if (response.result && response.result.includes('已将您的对话转接给人工客服')) {\r\n        // 显示转人工界面\r\n        setHumanServiceVisible(true);\r\n      }\r\n\r\n      // 解析结构化数据（模拟，实际应该从后端返回）\r\n      const structuredData = parseStructuredData(messageText, response);\r\n      \r\n      // 解析情感数据（模拟，实际应该从后端返回）\r\n      const emotionData = parseEmotionData(messageText);\r\n\r\n      // 添加机器人回复\r\n      const botMessage: Message = {\r\n        id: uuidv4(),\r\n        content: response.result || '抱歉，我暂时无法回答您的问题。',\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        structuredData,\r\n        emotion: emotionData\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      message.error('发送消息失败，请稍后再试');\r\n      \r\n      // 添加错误提示\r\n      const errorMessage: Message = {\r\n        id: uuidv4(),\r\n        content: '抱歉，系统暂时无法回应，请稍后再试。',\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理按键事件\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  // 解析结构化数据（模拟）\r\n  const parseStructuredData = (message: string, response: ChatResponse): any | undefined => {\r\n    // 这里应该是根据后端返回的数据进行解析\r\n    // 这里只是模拟一些示例数据\r\n    \r\n    if (message.toLowerCase().includes('订单')) {\r\n      return {\r\n        type: CardType.ORDER,\r\n        title: '订单信息',\r\n        orderNumber: 'ORD12345678',\r\n        orderDate: '2023-05-20',\r\n        status: OrderStatus.SHIPPED,\r\n        items: [\r\n          { name: 'iPhone 13 Pro Max', quantity: 1, price: 8999 },\r\n          { name: '手机保护壳', quantity: 2, price: 99 }\r\n        ],\r\n        totalAmount: 9197\r\n      };\r\n    }\r\n    \r\n    if (message.toLowerCase().includes('物流')) {\r\n      return {\r\n        type: CardType.LOGISTICS,\r\n        title: '物流信息',\r\n        trackingNumber: 'SF1234567890',\r\n        carrier: '顺丰速运',\r\n        status: LogisticsStatus.IN_TRANSIT,\r\n        estimatedDelivery: '2023-05-25',\r\n        events: [\r\n          { time: '2023-05-22 10:30', location: '上海分拣中心', description: '已发出' },\r\n          { time: '2023-05-21 18:45', location: '广州转运中心', description: '运输中' },\r\n          { time: '2023-05-21 09:20', location: '广州仓库', description: '已出库' }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    if (message.toLowerCase().includes('积分')) {\r\n      return {\r\n        type: CardType.POINTS,\r\n        title: '积分信息',\r\n        balance: 8500,\r\n        expiring: {\r\n          amount: 2000,\r\n          date: '2023-06-30'\r\n        },\r\n        recentTransactions: [\r\n          { date: '2023-05-15', description: '购物消费', amount: 500, isEarned: true },\r\n          { date: '2023-05-10', description: '积分兑换', amount: 1000, isEarned: false },\r\n          { date: '2023-05-01', description: '生日奖励', amount: 200, isEarned: true }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    return undefined;\r\n  };\r\n\r\n  // 解析情感数据（模拟）\r\n  const parseEmotionData = (message: string): EmotionData | undefined => {\r\n    // 这里应该是根据后端返回的数据进行解析\r\n    // 这里只是模拟一些示例数据\r\n    \r\n    const lowerMessage = message.toLowerCase();\r\n    \r\n    // 检测正面情绪\r\n    if (lowerMessage.includes('谢谢') || lowerMessage.includes('感谢') || \r\n        lowerMessage.includes('好的') || lowerMessage.includes('满意')) {\r\n      return {\r\n        type: 'POSITIVE',\r\n        intensity: 4,\r\n        keywords: ['感谢', '满意'],\r\n        trend: 'IMPROVING'\r\n      };\r\n    }\r\n    \r\n    // 检测负面情绪\r\n    if (lowerMessage.includes('不满') || lowerMessage.includes('差') || \r\n        lowerMessage.includes('退款') || lowerMessage.includes('投诉')) {\r\n      return {\r\n        type: 'NEGATIVE',\r\n        intensity: 2,\r\n        keywords: ['不满', '投诉'],\r\n        trend: 'DETERIORATING'\r\n      };\r\n    }\r\n    \r\n    // 默认中性\r\n    return {\r\n      type: 'NEUTRAL',\r\n      intensity: 3,\r\n      trend: 'STABLE'\r\n    };\r\n  };\r\n\r\n  // 渲染消息内容\r\n  const renderMessageContent = (msg: Message) => {\r\n    // 如果有结构化数据，渲染结构化卡片\r\n    if (msg.structuredData) {\r\n      return (\r\n        <div className=\"message-structured-data\">\r\n          <div className=\"message-text\">{msg.content}</div>\r\n          <StructuredInfoCard {...msg.structuredData} />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // 否则渲染普通文本\r\n    return <div className=\"message-text\">{msg.content}</div>;\r\n  };\r\n\r\n  // 渲染情感指示器\r\n  const renderEmotionIndicator = (msg: Message) => {\r\n    if (msg.sender !== 'user' || !msg.emotion) return null;\r\n    \r\n    return (\r\n      <div className=\"message-emotion\">\r\n        <EmotionDisplay \r\n          emotion={msg.emotion} \r\n          showDetails={showEmotionDetails}\r\n          size=\"small\"\r\n        />\r\n        {!showEmotionDetails && (\r\n          <Button \r\n            type=\"link\" \r\n            size=\"small\" \r\n            onClick={() => setShowEmotionDetails(true)}\r\n          >\r\n            查看详情\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      <Badge dot>\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          icon={<CustomerServiceOutlined />}\r\n          size=\"large\"\r\n          className=\"customer-service-button\"\r\n          onClick={showDrawer}\r\n        />\r\n      </Badge>\r\n\r\n      {/* 聊天抽屉 */}\r\n      <Drawer\r\n        title={\r\n          <div className=\"customer-service-header\">\r\n            <span>{isHumanServiceMode ? \"人工客服\" : \"智能客服\"}</span>\r\n            {!isHumanServiceMode && (\r\n              <Tooltip title=\"转人工客服\">\r\n                <Button \r\n                  type=\"link\" \r\n                  icon={<UserOutlined />} \r\n                  onClick={requestHumanService}\r\n                  size=\"small\"\r\n                >\r\n                  转人工\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n          </div>\r\n        }\r\n        placement=\"right\"\r\n        onClose={closeDrawer}\r\n        open={visible}\r\n        width={360}\r\n        closeIcon={<CloseOutlined />}\r\n        className=\"customer-service-drawer\"\r\n        footer={\r\n          <div className=\"customer-service-footer\">\r\n            {/* 使用自然语言输入组件 */}\r\n            <NaturalLanguageInput \r\n              onSearch={handleNaturalLanguageSearch}\r\n              loading={loading}\r\n              placeholder=\"您可以直接询问如'查询我最近的订单'或'我想退货'\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <div className=\"customer-service-messages\">\r\n          {messages.map(msg => (\r\n            <div\r\n              key={msg.id}\r\n              className={`message-bubble ${\r\n                msg.sender === 'user' \r\n                  ? 'user-message' \r\n                  : msg.sender === 'human' \r\n                    ? 'human-message' \r\n                    : 'bot-message'\r\n              }`}\r\n            >\r\n              {msg.sender !== 'user' && (\r\n                <Avatar \r\n                  className={msg.sender === 'human' ? 'human-avatar' : 'bot-avatar'} \r\n                  icon={msg.sender === 'human' ? <UserOutlined /> : <CustomerServiceOutlined />} \r\n                />\r\n              )}\r\n              <div className=\"message-content\">\r\n                {renderMessageContent(msg)}\r\n                <div className=\"message-time\">\r\n                  {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n              {renderEmotionIndicator(msg)}\r\n            </div>\r\n          ))}\r\n          {loading && (\r\n            <div className=\"message-bubble bot-message\">\r\n              <Avatar \r\n                className={isHumanServiceMode ? 'human-avatar' : 'bot-avatar'} \r\n                icon={isHumanServiceMode ? <UserOutlined /> : <CustomerServiceOutlined />} \r\n              />\r\n              <div className=\"message-content loading-content\">\r\n                <Spin size=\"small\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </Drawer>\r\n\r\n      {/* 人工客服转接界面 */}\r\n      <HumanServiceTransfer\r\n        visible={humanServiceVisible}\r\n        userId=\"web-user\"\r\n        sessionId={sessionId}\r\n        onCancel={cancelHumanService}\r\n        onComplete={completeHumanService}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}