{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { CartService } from '../../services/cartService';\n\n// 模拟用户ID\nconst MOCK_USER_ID = 1;\n\n// 计算购物车总数量和总金额\nconst calculateTotals = items => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  return {\n    totalQuantity,\n    totalAmount\n  };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount, coupon, pointsUsed) => {\n  let discountAmount = 0;\n\n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n\n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n\n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n\n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  return {\n    discountAmount,\n    actualAmount\n  };\n};\n\n// 保存购物车数据到localStorage\nconst saveCartToLocalStorage = items => {\n  try {\n    localStorage.setItem('cartItems', JSON.stringify(items));\n  } catch (error) {\n    console.error('保存购物车数据到localStorage失败:', error);\n  }\n};\n\n// 从localStorage加载购物车数据\nconst loadCartFromLocalStorage = () => {\n  try {\n    const cartItemsStr = localStorage.getItem('cartItems');\n    if (cartItemsStr) {\n      return JSON.parse(cartItemsStr);\n    }\n  } catch (error) {\n    console.error('从localStorage加载购物车数据失败:', error);\n  }\n  return [];\n};\n\n// 异步action：添加商品到购物车\nexport const addToCartAsync = createAsyncThunk('cart/addToCartAsync', async ({\n  product,\n  quantity\n}, {\n  dispatch,\n  getState\n}) => {\n  try {\n    // 调用后端API\n    await CartService.addToCart(MOCK_USER_ID, product.id, quantity);\n\n    // 更新Redux状态\n    dispatch(addToCart({\n      product,\n      quantity\n    }));\n\n    // 保存到localStorage\n    const state = getState();\n    saveCartToLocalStorage(state.cart.items);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('添加商品到购物车失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：更新购物车商品数量\nexport const updateQuantityAsync = createAsyncThunk('cart/updateQuantityAsync', async ({\n  productId,\n  quantity\n}, {\n  dispatch,\n  getState\n}) => {\n  try {\n    // 调用后端API\n    await CartService.updateCartItemQuantity(MOCK_USER_ID, productId, quantity);\n\n    // 更新Redux状态\n    dispatch(updateQuantity({\n      productId,\n      quantity\n    }));\n\n    // 保存到localStorage\n    const state = getState();\n    saveCartToLocalStorage(state.cart.items);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('更新购物车商品数量失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：从购物车删除商品\nexport const removeFromCartAsync = createAsyncThunk('cart/removeFromCartAsync', async (productId, {\n  dispatch,\n  getState\n}) => {\n  try {\n    // 调用后端API\n    await CartService.removeFromCartByProductId(MOCK_USER_ID, productId);\n\n    // 更新Redux状态\n    dispatch(removeFromCart(productId));\n\n    // 保存到localStorage\n    const state = getState();\n    saveCartToLocalStorage(state.cart.items);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('从购物车删除商品失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：清空购物车\nexport const clearCartAsync = createAsyncThunk('cart/clearCartAsync', async (_, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API\n    await CartService.clearCart(MOCK_USER_ID);\n\n    // 更新Redux状态\n    dispatch(clearCart());\n\n    // 清空localStorage\n    localStorage.removeItem('cartItems');\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('清空购物车失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：加载购物车\nexport const loadCartAsync = createAsyncThunk('cart/loadCartAsync', async (_, {\n  dispatch\n}) => {\n  try {\n    // 尝试从localStorage加载\n    const localCartItems = loadCartFromLocalStorage();\n    if (localCartItems.length > 0) {\n      dispatch(setCartItems(localCartItems));\n      return {\n        success: true\n      };\n    }\n\n    // 如果localStorage中没有数据，则调用后端API\n    const cartItems = await CartService.getCartItems(MOCK_USER_ID);\n\n    // 更新Redux状态\n    dispatch(setCartItems(cartItems));\n\n    // 保存到localStorage\n    saveCartToLocalStorage(cartItems);\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('加载购物车失败:', error);\n    throw error;\n  }\n});\n// 尝试从localStorage加载初始购物车数据\nconst loadInitialCartItems = () => {\n  try {\n    const cartItemsStr = localStorage.getItem('cartItems');\n    if (cartItemsStr) {\n      return JSON.parse(cartItemsStr);\n    }\n  } catch (error) {\n    console.error('从localStorage加载初始购物车数据失败:', error);\n  }\n  return [];\n};\n\n// 计算初始状态\nconst calculateInitialState = () => {\n  const items = loadInitialCartItems();\n  const {\n    totalQuantity,\n    totalAmount\n  } = calculateTotals(items);\n  return {\n    items,\n    totalQuantity,\n    totalAmount,\n    isOpen: false,\n    coupon: null,\n    pointsUsed: 0,\n    discountAmount: 0,\n    actualAmount: totalAmount\n  };\n};\nconst initialState = calculateInitialState();\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 设置购物车商品列表\n    setCartItems: (state, action) => {\n      state.items = action.payload;\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 添加商品到购物车\n    addToCart: (state, action) => {\n      const {\n        product,\n        quantity = 1\n      } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({\n          product,\n          quantity\n        });\n      }\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 从购物车移除商品\n    removeFromCart: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 更新商品数量\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n\n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n\n        // 重新计算优惠后金额\n        const {\n          discountAmount,\n          actualAmount\n        } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    // 清空购物车\n    clearCart: state => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    // 应用优惠券\n    applyCoupon: (state, action) => {\n      state.coupon = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 使用积分\n    applyPoints: (state, action) => {\n      state.pointsUsed = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 打开购物车抽屉\n    openCart: state => {\n      state.isOpen = true;\n    },\n    // 关闭购物车抽屉\n    closeCart: state => {\n      state.isOpen = false;\n    },\n    // 切换购物车抽屉状态\n    toggleCart: state => {\n      state.isOpen = !state.isOpen;\n    }\n  }\n});\nexport const {\n  setCartItems,\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","CartService","MOCK_USER_ID","calculateTotals","items","totalQuantity","totalAmount","forEach","item","quantity","product","price","calculateActualAmount","coupon","pointsUsed","discountAmount","minAmount","type","value","pointsDiscount","Math","min","actualAmount","saveCartToLocalStorage","localStorage","setItem","JSON","stringify","error","console","loadCartFromLocalStorage","cartItemsStr","getItem","parse","addToCartAsync","dispatch","getState","addToCart","id","state","cart","success","updateQuantityAsync","productId","updateCartItemQuantity","updateQuantity","removeFromCartAsync","removeFromCartByProductId","removeFromCart","clearCartAsync","_","clearCart","removeItem","loadCartAsync","localCartItems","length","setCartItems","cartItems","getCartItems","loadInitialCartItems","calculateInitialState","isOpen","initialState","cartSlice","name","reducers","action","payload","totals","existingItemIndex","findIndex","push","filter","itemIndex","splice","applyCoupon","applyPoints","openCart","closeCart","toggleCart","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { CartItem, Product, Coupon } from '../../types';\nimport { CartService } from '../../services/cartService';\n\n// 模拟用户ID\nconst MOCK_USER_ID = 1;\n\n// 计算购物车总数量和总金额\nconst calculateTotals = (items: CartItem[]) => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  \n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  \n  return { totalQuantity, totalAmount };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount: number, coupon: Coupon | null, pointsUsed: number) => {\n  let discountAmount = 0;\n  \n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n  \n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n  \n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n  \n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  \n  return { discountAmount, actualAmount };\n};\n\n// 保存购物车数据到localStorage\nconst saveCartToLocalStorage = (items: CartItem[]) => {\n  try {\n    localStorage.setItem('cartItems', JSON.stringify(items));\n  } catch (error) {\n    console.error('保存购物车数据到localStorage失败:', error);\n  }\n};\n\n// 从localStorage加载购物车数据\nconst loadCartFromLocalStorage = (): CartItem[] => {\n  try {\n    const cartItemsStr = localStorage.getItem('cartItems');\n    if (cartItemsStr) {\n      return JSON.parse(cartItemsStr);\n    }\n  } catch (error) {\n    console.error('从localStorage加载购物车数据失败:', error);\n  }\n  return [];\n};\n\n// 异步action：添加商品到购物车\nexport const addToCartAsync = createAsyncThunk(\n  'cart/addToCartAsync',\n  async ({ product, quantity }: { product: Product; quantity: number }, { dispatch, getState }) => {\n    try {\n      // 调用后端API\n      await CartService.addToCart(MOCK_USER_ID, product.id, quantity);\n      \n      // 更新Redux状态\n      dispatch(addToCart({ product, quantity }));\n      \n      // 保存到localStorage\n      const state = getState() as { cart: CartState };\n      saveCartToLocalStorage(state.cart.items);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('添加商品到购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：更新购物车商品数量\nexport const updateQuantityAsync = createAsyncThunk(\n  'cart/updateQuantityAsync',\n  async ({ productId, quantity }: { productId: number; quantity: number }, { dispatch, getState }) => {\n    try {\n      // 调用后端API\n      await CartService.updateCartItemQuantity(MOCK_USER_ID, productId, quantity);\n      \n      // 更新Redux状态\n      dispatch(updateQuantity({ productId, quantity }));\n      \n      // 保存到localStorage\n      const state = getState() as { cart: CartState };\n      saveCartToLocalStorage(state.cart.items);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('更新购物车商品数量失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：从购物车删除商品\nexport const removeFromCartAsync = createAsyncThunk(\n  'cart/removeFromCartAsync',\n  async (productId: number, { dispatch, getState }) => {\n    try {\n      // 调用后端API\n      await CartService.removeFromCartByProductId(MOCK_USER_ID, productId);\n      \n      // 更新Redux状态\n      dispatch(removeFromCart(productId));\n      \n      // 保存到localStorage\n      const state = getState() as { cart: CartState };\n      saveCartToLocalStorage(state.cart.items);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('从购物车删除商品失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：清空购物车\nexport const clearCartAsync = createAsyncThunk(\n  'cart/clearCartAsync',\n  async (_, { dispatch }) => {\n    try {\n      // 调用后端API\n      await CartService.clearCart(MOCK_USER_ID);\n      \n      // 更新Redux状态\n      dispatch(clearCart());\n      \n      // 清空localStorage\n      localStorage.removeItem('cartItems');\n      \n      return { success: true };\n    } catch (error) {\n      console.error('清空购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：加载购物车\nexport const loadCartAsync = createAsyncThunk(\n  'cart/loadCartAsync',\n  async (_, { dispatch }) => {\n    try {\n      // 尝试从localStorage加载\n      const localCartItems = loadCartFromLocalStorage();\n      if (localCartItems.length > 0) {\n        dispatch(setCartItems(localCartItems));\n        return { success: true };\n      }\n      \n      // 如果localStorage中没有数据，则调用后端API\n      const cartItems = await CartService.getCartItems(MOCK_USER_ID);\n      \n      // 更新Redux状态\n      dispatch(setCartItems(cartItems));\n      \n      // 保存到localStorage\n      saveCartToLocalStorage(cartItems);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('加载购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\ninterface CartState {\n  items: CartItem[];\n  totalQuantity: number;\n  totalAmount: number;\n  isOpen: boolean; // 购物车抽屉是否打开\n  coupon: Coupon | null; // 已选择的优惠券\n  pointsUsed: number; // 使用的积分\n  discountAmount: number; // 优惠金额\n  actualAmount: number; // 实际支付金额\n}\n\n// 尝试从localStorage加载初始购物车数据\nconst loadInitialCartItems = (): CartItem[] => {\n  try {\n    const cartItemsStr = localStorage.getItem('cartItems');\n    if (cartItemsStr) {\n      return JSON.parse(cartItemsStr);\n    }\n  } catch (error) {\n    console.error('从localStorage加载初始购物车数据失败:', error);\n  }\n  return [];\n};\n\n// 计算初始状态\nconst calculateInitialState = (): CartState => {\n  const items = loadInitialCartItems();\n  const { totalQuantity, totalAmount } = calculateTotals(items);\n  \n  return {\n    items,\n    totalQuantity,\n    totalAmount,\n    isOpen: false,\n    coupon: null,\n    pointsUsed: 0,\n    discountAmount: 0,\n    actualAmount: totalAmount\n  };\n};\n\nconst initialState: CartState = calculateInitialState();\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 设置购物车商品列表\n    setCartItems: (state, action: PayloadAction<CartItem[]>) => {\n      state.items = action.payload;\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 添加商品到购物车\n    addToCart: (state, action: PayloadAction<{ product: Product; quantity?: number }>) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({ product, quantity });\n      }\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 从购物车移除商品\n    removeFromCart: (state, action: PayloadAction<number>) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 更新商品数量\n    updateQuantity: (state, action: PayloadAction<{ productId: number; quantity: number }>) => {\n      const { productId, quantity } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      \n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n        \n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n        \n        // 重新计算优惠后金额\n        const { discountAmount, actualAmount } = calculateActualAmount(\n          state.totalAmount, \n          state.coupon, \n          state.pointsUsed\n        );\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    \n    // 清空购物车\n    clearCart: (state) => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    \n    // 应用优惠券\n    applyCoupon: (state, action: PayloadAction<Coupon | null>) => {\n      state.coupon = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 使用积分\n    applyPoints: (state, action: PayloadAction<number>) => {\n      state.pointsUsed = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 打开购物车抽屉\n    openCart: (state) => {\n      state.isOpen = true;\n    },\n    \n    // 关闭购物车抽屉\n    closeCart: (state) => {\n      state.isOpen = false;\n    },\n    \n    // 切换购物车抽屉状态\n    toggleCart: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n  },\n});\n\nexport const {\n  setCartItems,\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}