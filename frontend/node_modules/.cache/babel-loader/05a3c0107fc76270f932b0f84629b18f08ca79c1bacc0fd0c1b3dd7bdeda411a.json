{"ast":null,"code":"import api from'./api';/**\r\n * 商品服务类\r\n */export class ProductService{/**\r\n   * 获取商品列表\r\n   */static async getProducts(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/api/products',{params});return response.data.data;}/**\r\n   * 根据ID获取商品详情\r\n   */static async getProductById(id){const response=await api.get(`/api/products/${id}`);return response.data.data;}/**\r\n   * 搜索商品\r\n   */static async searchProducts(params){const response=await api.get('/api/products/search',{params});return response.data.data;}/**\r\n   * 获取所有分类\r\n   */static async getAllCategories(){const response=await api.get('/api/categories');return response.data.data;}/**\r\n   * 获取顶级分类\r\n   */static async getTopCategories(){const response=await api.get('/api/categories/top');return response.data.data;}/**\r\n   * 根据父分类ID获取子分类\r\n   */static async getCategoriesByParentId(parentId){const response=await api.get(`/api/categories/parent/${parentId}`);return response.data.data;}/**\r\n   * 根据ID获取分类详情\r\n   */static async getCategoryById(id){const response=await api.get(`/api/categories/${id}`);return response.data.data;}}","map":{"version":3,"names":["api","ProductService","getProducts","params","arguments","length","undefined","response","get","data","getProductById","id","searchProducts","getAllCategories","getTopCategories","getCategoriesByParentId","parentId","getCategoryById"],"sources":["D:/luckymall/frontend/src/services/productService.ts"],"sourcesContent":["import api from './api';\r\nimport { \r\n  Product, \r\n  Category, \r\n  ApiResponse, \r\n  PageResult, \r\n  ProductQueryParams, \r\n  ProductSearchParams \r\n} from '../types';\r\n\r\n/**\r\n * 商品服务类\r\n */\r\nexport class ProductService {\r\n  \r\n  /**\r\n   * 获取商品列表\r\n   */\r\n  static async getProducts(params: ProductQueryParams = {}): Promise<PageResult<Product>> {\r\n    const response = await api.get<ApiResponse<PageResult<Product>>>('/api/products', { params });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据ID获取商品详情\r\n   */\r\n  static async getProductById(id: number): Promise<Product> {\r\n    const response = await api.get<ApiResponse<Product>>(`/api/products/${id}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 搜索商品\r\n   */\r\n  static async searchProducts(params: ProductSearchParams): Promise<PageResult<Product>> {\r\n    const response = await api.get<ApiResponse<PageResult<Product>>>('/api/products/search', { params });\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 获取所有分类\r\n   */\r\n  static async getAllCategories(): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>('/api/categories');\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 获取顶级分类\r\n   */\r\n  static async getTopCategories(): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>('/api/categories/top');\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据父分类ID获取子分类\r\n   */\r\n  static async getCategoriesByParentId(parentId: number): Promise<Category[]> {\r\n    const response = await api.get<ApiResponse<Category[]>>(`/api/categories/parent/${parentId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据ID获取分类详情\r\n   */\r\n  static async getCategoryById(id: number): Promise<Category> {\r\n    const response = await api.get<ApiResponse<Category>>(`/api/categories/${id}`);\r\n    return response.data.data;\r\n  }\r\n} "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAUvB;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAe,CAE1B;AACF;AACA,KACE,YAAa,CAAAC,WAAWA,CAAA,CAAgE,IAA/D,CAAAC,MAA0B,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtD,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAmC,eAAe,CAAE,CAAEL,MAAO,CAAC,CAAC,CAC7F,MAAO,CAAAI,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAC,cAAcA,CAACC,EAAU,CAAoB,CACxD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAuB,iBAAiBG,EAAE,EAAE,CAAC,CAC3E,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAG,cAAcA,CAACT,MAA2B,CAAgC,CACrF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAmC,sBAAsB,CAAE,CAAEL,MAAO,CAAC,CAAC,CACpG,MAAO,CAAAI,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAI,gBAAgBA,CAAA,CAAwB,CACnD,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAA0B,iBAAiB,CAAC,CAC1E,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAK,gBAAgBA,CAAA,CAAwB,CACnD,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAA0B,qBAAqB,CAAC,CAC9E,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAM,uBAAuBA,CAACC,QAAgB,CAAuB,CAC1E,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAA0B,0BAA0BQ,QAAQ,EAAE,CAAC,CAC7F,MAAO,CAAAT,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAEA;AACF;AACA,KACE,YAAa,CAAAQ,eAAeA,CAACN,EAAU,CAAqB,CAC1D,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAwB,mBAAmBG,EAAE,EAAE,CAAC,CAC9E,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}