{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n  isOpen: false,\n  coupon: null,\n  pointsUsed: 0,\n  discountAmount: 0,\n  actualAmount: 0\n};\n\n// 计算购物车总数量和总金额\nconst calculateTotals = items => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  return {\n    totalQuantity,\n    totalAmount\n  };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount, coupon, pointsUsed) => {\n  let discountAmount = 0;\n\n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n\n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n\n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n\n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  return {\n    discountAmount,\n    actualAmount\n  };\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 添加商品到购物车\n    addToCart: (state, action) => {\n      const {\n        product,\n        quantity = 1\n      } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({\n          product,\n          quantity\n        });\n      }\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 从购物车移除商品\n    removeFromCart: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 更新商品数量\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n\n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n\n        // 重新计算优惠后金额\n        const {\n          discountAmount,\n          actualAmount\n        } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    // 清空购物车\n    clearCart: state => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    // 应用优惠券\n    applyCoupon: (state, action) => {\n      state.coupon = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 使用积分\n    applyPoints: (state, action) => {\n      state.pointsUsed = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 打开购物车抽屉\n    openCart: state => {\n      state.isOpen = true;\n    },\n    // 关闭购物车抽屉\n    closeCart: state => {\n      state.isOpen = false;\n    },\n    // 切换购物车抽屉状态\n    toggleCart: state => {\n      state.isOpen = !state.isOpen;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","totalAmount","isOpen","coupon","pointsUsed","discountAmount","actualAmount","calculateTotals","forEach","item","quantity","product","price","calculateActualAmount","minAmount","type","value","pointsDiscount","Math","min","cartSlice","name","reducers","addToCart","state","action","payload","existingItemIndex","findIndex","id","push","totals","removeFromCart","productId","filter","updateQuantity","itemIndex","splice","clearCart","applyCoupon","applyPoints","openCart","closeCart","toggleCart","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CartItem, Product, Coupon } from '../../types';\n\ninterface CartState {\n  items: CartItem[];\n  totalQuantity: number;\n  totalAmount: number;\n  isOpen: boolean; // 购物车抽屉是否打开\n  coupon: Coupon | null; // 已选择的优惠券\n  pointsUsed: number; // 使用的积分\n  discountAmount: number; // 优惠金额\n  actualAmount: number; // 实际支付金额\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n  isOpen: false,\n  coupon: null,\n  pointsUsed: 0,\n  discountAmount: 0,\n  actualAmount: 0,\n};\n\n// 计算购物车总数量和总金额\nconst calculateTotals = (items: CartItem[]) => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  \n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  \n  return { totalQuantity, totalAmount };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount: number, coupon: Coupon | null, pointsUsed: number) => {\n  let discountAmount = 0;\n  \n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n  \n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n  \n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n  \n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  \n  return { discountAmount, actualAmount };\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 添加商品到购物车\n    addToCart: (state, action: PayloadAction<{ product: Product; quantity?: number }>) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({ product, quantity });\n      }\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 从购物车移除商品\n    removeFromCart: (state, action: PayloadAction<number>) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 更新商品数量\n    updateQuantity: (state, action: PayloadAction<{ productId: number; quantity: number }>) => {\n      const { productId, quantity } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      \n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n        \n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n        \n        // 重新计算优惠后金额\n        const { discountAmount, actualAmount } = calculateActualAmount(\n          state.totalAmount, \n          state.coupon, \n          state.pointsUsed\n        );\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    \n    // 清空购物车\n    clearCart: (state) => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    \n    // 应用优惠券\n    applyCoupon: (state, action: PayloadAction<Coupon | null>) => {\n      state.coupon = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 使用积分\n    applyPoints: (state, action: PayloadAction<number>) => {\n      state.pointsUsed = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 打开购物车抽屉\n    openCart: (state) => {\n      state.isOpen = true;\n    },\n    \n    // 关闭购物车抽屉\n    closeCart: (state) => {\n      state.isOpen = false;\n    },\n    \n    // 切换购物车抽屉状态\n    toggleCart: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}