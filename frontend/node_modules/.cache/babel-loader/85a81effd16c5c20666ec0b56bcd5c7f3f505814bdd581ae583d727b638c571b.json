{"ast":null,"code":"import axios from 'axios';\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/**\r\n * 发送聊天消息\r\n * @param request 聊天请求参数\r\n * @returns 聊天响应\r\n */\nexport const sendChatMessage = async request => {\n  try {\n    const response = await api.post('/api/chat', request);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending chat message:', error);\n    throw error;\n  }\n};\n\n/**\r\n * 获取流式聊天响应\r\n * @param request 聊天请求参数\r\n * @returns 聊天响应\r\n */\nexport const sendStreamChatMessage = async request => {\n  try {\n    const {\n      userId,\n      sessionId,\n      message,\n      context\n    } = request;\n    const params = new URLSearchParams();\n    params.append('userId', userId);\n    if (sessionId) params.append('sessionId', sessionId);\n    params.append('message', message);\n    if (context) params.append('context', JSON.stringify(context));\n    const response = await api.get(`/api/chat/stream?${params.toString()}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending stream chat message:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","sendChatMessage","request","response","post","data","error","console","sendStreamChatMessage","userId","sessionId","message","context","params","URLSearchParams","append","JSON","stringify","get","toString"],"sources":["D:/luckymall/frontend/src/services/chatService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport interface ChatRequest {\r\n  userId: string;\r\n  sessionId: string;\r\n  message: string;\r\n  context?: Record<string, any>;\r\n}\r\n\r\nexport interface ChatResponse {\r\n  result: string;\r\n  sessionId: string;\r\n  responseTime: number;\r\n  cacheHit: boolean;\r\n  error?: string;\r\n}\r\n\r\n// 创建axios实例\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || '',\r\n  timeout: 15000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n/**\r\n * 发送聊天消息\r\n * @param request 聊天请求参数\r\n * @returns 聊天响应\r\n */\r\nexport const sendChatMessage = async (request: ChatRequest): Promise<ChatResponse> => {\r\n  try {\r\n    const response = await api.post<ChatResponse>('/api/chat', request);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending chat message:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取流式聊天响应\r\n * @param request 聊天请求参数\r\n * @returns 聊天响应\r\n */\r\nexport const sendStreamChatMessage = async (request: ChatRequest): Promise<ChatResponse> => {\r\n  try {\r\n    const { userId, sessionId, message, context } = request;\r\n    const params = new URLSearchParams();\r\n    params.append('userId', userId);\r\n    if (sessionId) params.append('sessionId', sessionId);\r\n    params.append('message', message);\r\n    if (context) params.append('context', JSON.stringify(context));\r\n    \r\n    const response = await api.get<ChatResponse>(`/api/chat/stream?${params.toString()}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending stream chat message:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAiBzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE;EAC5CC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAAoB,IAA4B;EACpF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAe,WAAW,EAAEF,OAAO,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,qBAAqB,GAAG,MAAON,OAAoB,IAA4B;EAC1F,IAAI;IACF,MAAM;MAAEO,MAAM;MAAEC,SAAS;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGV,OAAO;IACvD,MAAMW,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAEN,MAAM,CAAC;IAC/B,IAAIC,SAAS,EAAEG,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;IACpDG,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IACjC,IAAIC,OAAO,EAAEC,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC;IAE9D,MAAMT,QAAQ,GAAG,MAAMV,GAAG,CAACyB,GAAG,CAAe,oBAAoBL,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC;IACrF,OAAOhB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}