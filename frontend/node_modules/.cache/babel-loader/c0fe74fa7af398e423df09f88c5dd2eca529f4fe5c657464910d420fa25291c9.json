{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={items:[],totalQuantity:0,totalAmount:0,isOpen:false,coupon:null,pointsUsed:0,discountAmount:0,actualAmount:0};// 计算购物车总数量和总金额\nconst calculateTotals=items=>{let totalQuantity=0;let totalAmount=0;items.forEach(item=>{totalQuantity+=item.quantity;totalAmount+=item.product.price*item.quantity;});return{totalQuantity,totalAmount};};// 计算优惠后的实际金额\nconst calculateActualAmount=(totalAmount,coupon,pointsUsed)=>{let discountAmount=0;// 计算优惠券折扣\nif(coupon){if(totalAmount>=coupon.minAmount){if(coupon.type==='DISCOUNT'){// 折扣券，如8折就是0.8\ndiscountAmount+=totalAmount*(1-coupon.value/10);}else if(coupon.type==='FIXED'){// 满减券\ndiscountAmount+=coupon.value;}}}// 计算积分折扣（假设100积分=1元）\nconst pointsDiscount=pointsUsed/100;discountAmount+=pointsDiscount;// 确保折扣不超过总金额\ndiscountAmount=Math.min(discountAmount,totalAmount);// 计算实际支付金额\nconst actualAmount=totalAmount-discountAmount;return{discountAmount,actualAmount};};const cartSlice=createSlice({name:'cart',initialState,reducers:{// 添加商品到购物车\naddToCart:(state,action)=>{const{product,quantity=1}=action.payload;const existingItemIndex=state.items.findIndex(item=>item.product.id===product.id);if(existingItemIndex>=0){// 如果商品已存在，增加数量\nstate.items[existingItemIndex].quantity+=quantity;}else{// 如果商品不存在，添加新项\nstate.items.push({product,quantity});}// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;// 重新计算优惠后金额\nconst{discountAmount,actualAmount}=calculateActualAmount(state.totalAmount,state.coupon,state.pointsUsed);state.discountAmount=discountAmount;state.actualAmount=actualAmount;},// 从购物车移除商品\nremoveFromCart:(state,action)=>{const productId=action.payload;state.items=state.items.filter(item=>item.product.id!==productId);// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;// 重新计算优惠后金额\nconst{discountAmount,actualAmount}=calculateActualAmount(state.totalAmount,state.coupon,state.pointsUsed);state.discountAmount=discountAmount;state.actualAmount=actualAmount;},// 更新商品数量\nupdateQuantity:(state,action)=>{const{productId,quantity}=action.payload;const itemIndex=state.items.findIndex(item=>item.product.id===productId);if(itemIndex>=0){if(quantity<=0){// 如果数量为0或负数，移除商品\nstate.items.splice(itemIndex,1);}else{// 更新数量\nstate.items[itemIndex].quantity=quantity;}// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;// 重新计算优惠后金额\nconst{discountAmount,actualAmount}=calculateActualAmount(state.totalAmount,state.coupon,state.pointsUsed);state.discountAmount=discountAmount;state.actualAmount=actualAmount;}},// 清空购物车\nclearCart:state=>{state.items=[];state.totalQuantity=0;state.totalAmount=0;state.coupon=null;state.pointsUsed=0;state.discountAmount=0;state.actualAmount=0;},// 应用优惠券\napplyCoupon:(state,action)=>{state.coupon=action.payload;// 重新计算优惠后金额\nconst{discountAmount,actualAmount}=calculateActualAmount(state.totalAmount,state.coupon,state.pointsUsed);state.discountAmount=discountAmount;state.actualAmount=actualAmount;},// 使用积分\napplyPoints:(state,action)=>{state.pointsUsed=action.payload;// 重新计算优惠后金额\nconst{discountAmount,actualAmount}=calculateActualAmount(state.totalAmount,state.coupon,state.pointsUsed);state.discountAmount=discountAmount;state.actualAmount=actualAmount;},// 打开购物车抽屉\nopenCart:state=>{state.isOpen=true;},// 关闭购物车抽屉\ncloseCart:state=>{state.isOpen=false;},// 切换购物车抽屉状态\ntoggleCart:state=>{state.isOpen=!state.isOpen;}}});export const{addToCart,removeFromCart,updateQuantity,clearCart,applyCoupon,applyPoints,openCart,closeCart,toggleCart}=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","totalAmount","isOpen","coupon","pointsUsed","discountAmount","actualAmount","calculateTotals","forEach","item","quantity","product","price","calculateActualAmount","minAmount","type","value","pointsDiscount","Math","min","cartSlice","name","reducers","addToCart","state","action","payload","existingItemIndex","findIndex","id","push","totals","removeFromCart","productId","filter","updateQuantity","itemIndex","splice","clearCart","applyCoupon","applyPoints","openCart","closeCart","toggleCart","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CartItem, Product, Coupon } from '../../types';\n\ninterface CartState {\n  items: CartItem[];\n  totalQuantity: number;\n  totalAmount: number;\n  isOpen: boolean; // 购物车抽屉是否打开\n  coupon: Coupon | null; // 已选择的优惠券\n  pointsUsed: number; // 使用的积分\n  discountAmount: number; // 优惠金额\n  actualAmount: number; // 实际支付金额\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n  isOpen: false,\n  coupon: null,\n  pointsUsed: 0,\n  discountAmount: 0,\n  actualAmount: 0,\n};\n\n// 计算购物车总数量和总金额\nconst calculateTotals = (items: CartItem[]) => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  \n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  \n  return { totalQuantity, totalAmount };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount: number, coupon: Coupon | null, pointsUsed: number) => {\n  let discountAmount = 0;\n  \n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n  \n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n  \n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n  \n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  \n  return { discountAmount, actualAmount };\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 添加商品到购物车\n    addToCart: (state, action: PayloadAction<{ product: Product; quantity?: number }>) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({ product, quantity });\n      }\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 从购物车移除商品\n    removeFromCart: (state, action: PayloadAction<number>) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 更新商品数量\n    updateQuantity: (state, action: PayloadAction<{ productId: number; quantity: number }>) => {\n      const { productId, quantity } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      \n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n        \n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n        \n        // 重新计算优惠后金额\n        const { discountAmount, actualAmount } = calculateActualAmount(\n          state.totalAmount, \n          state.coupon, \n          state.pointsUsed\n        );\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    \n    // 清空购物车\n    clearCart: (state) => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    \n    // 应用优惠券\n    applyCoupon: (state, action: PayloadAction<Coupon | null>) => {\n      state.coupon = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 使用积分\n    applyPoints: (state, action: PayloadAction<number>) => {\n      state.pointsUsed = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 打开购物车抽屉\n    openCart: (state) => {\n      state.isOpen = true;\n    },\n    \n    // 关闭购物车抽屉\n    closeCart: (state) => {\n      state.isOpen = false;\n    },\n    \n    // 切换购物车抽屉状态\n    toggleCart: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}