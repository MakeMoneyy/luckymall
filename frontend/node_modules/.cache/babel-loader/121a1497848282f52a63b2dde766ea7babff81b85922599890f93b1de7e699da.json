{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={currentUser:null,isLoggedIn:false,loginModalVisible:false,registerModalVisible:false,loading:false,error:null};const userSlice=createSlice({name:'user',initialState,reducers:{// 设置当前用户（模拟登录）\nsetCurrentUser:(state,action)=>{state.currentUser=action.payload;state.isLoggedIn=true;state.loginModalVisible=false;state.error=null;},// 清除当前用户（登出）\nclearCurrentUser:state=>{state.currentUser=null;state.isLoggedIn=false;},// 显示登录模态框\nshowLoginModal:state=>{state.loginModalVisible=true;state.registerModalVisible=false;},// 隐藏登录模态框\nhideLoginModal:state=>{state.loginModalVisible=false;state.error=null;},// 显示注册模态框\nshowRegisterModal:state=>{state.registerModalVisible=true;state.loginModalVisible=false;},// 隐藏注册模态框\nhideRegisterModal:state=>{state.registerModalVisible=false;state.error=null;},// 设置加载状态\nsetLoading:(state,action)=>{state.loading=action.payload;},// 设置错误信息\nsetError:(state,action)=>{state.error=action.payload;state.loading=false;},// 清除错误信息\nclearError:state=>{state.error=null;},// 模拟登录\nmockLogin:(state,action)=>{const{username}=action.payload;// 模拟用户数据\nconst mockUser={id:1,username,email:`${username}@example.com`,phone:'13800138000',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};state.currentUser=mockUser;state.isLoggedIn=true;state.loginModalVisible=false;state.error=null;},// 模拟注册\nmockRegister:(state,action)=>{const{username,email,phone}=action.payload;// 模拟用户数据\nconst mockUser={id:Date.now(),// 使用时间戳作为模拟ID\nusername,email,phone,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};state.currentUser=mockUser;state.isLoggedIn=true;state.registerModalVisible=false;state.error=null;}}});export const{setCurrentUser,clearCurrentUser,showLoginModal,hideLoginModal,showRegisterModal,hideRegisterModal,setLoading,setError,clearError,mockLogin,mockRegister}=userSlice.actions;export default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","isLoggedIn","loginModalVisible","registerModalVisible","loading","error","userSlice","name","reducers","setCurrentUser","state","action","payload","clearCurrentUser","showLoginModal","hideLoginModal","showRegisterModal","hideRegisterModal","setLoading","setError","clearError","mockLogin","username","mockUser","id","email","phone","createdAt","Date","toISOString","updatedAt","mockRegister","now","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from '../../types';\r\n\r\ninterface UserState {\r\n  currentUser: User | null;\r\n  isLoggedIn: boolean;\r\n  loginModalVisible: boolean;\r\n  registerModalVisible: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  currentUser: null,\r\n  isLoggedIn: false,\r\n  loginModalVisible: false,\r\n  registerModalVisible: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    // 设置当前用户（模拟登录）\r\n    setCurrentUser: (state, action: PayloadAction<User>) => {\r\n      state.currentUser = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.loginModalVisible = false;\r\n      state.error = null;\r\n    },\r\n    \r\n    // 清除当前用户（登出）\r\n    clearCurrentUser: (state) => {\r\n      state.currentUser = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    \r\n    // 显示登录模态框\r\n    showLoginModal: (state) => {\r\n      state.loginModalVisible = true;\r\n      state.registerModalVisible = false;\r\n    },\r\n    \r\n    // 隐藏登录模态框\r\n    hideLoginModal: (state) => {\r\n      state.loginModalVisible = false;\r\n      state.error = null;\r\n    },\r\n    \r\n    // 显示注册模态框\r\n    showRegisterModal: (state) => {\r\n      state.registerModalVisible = true;\r\n      state.loginModalVisible = false;\r\n    },\r\n    \r\n    // 隐藏注册模态框\r\n    hideRegisterModal: (state) => {\r\n      state.registerModalVisible = false;\r\n      state.error = null;\r\n    },\r\n    \r\n    // 设置加载状态\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    \r\n    // 设置错误信息\r\n    setError: (state, action: PayloadAction<string>) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    \r\n    // 清除错误信息\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    \r\n    // 模拟登录\r\n    mockLogin: (state, action: PayloadAction<{ username: string; password: string }>) => {\r\n      const { username } = action.payload;\r\n      \r\n      // 模拟用户数据\r\n      const mockUser: User = {\r\n        id: 1,\r\n        username,\r\n        email: `${username}@example.com`,\r\n        phone: '13800138000',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      state.currentUser = mockUser;\r\n      state.isLoggedIn = true;\r\n      state.loginModalVisible = false;\r\n      state.error = null;\r\n    },\r\n    \r\n    // 模拟注册\r\n    mockRegister: (state, action: PayloadAction<{\r\n      username: string;\r\n      password: string;\r\n      email: string;\r\n      phone: string;\r\n    }>) => {\r\n      const { username, email, phone } = action.payload;\r\n      \r\n      // 模拟用户数据\r\n      const mockUser: User = {\r\n        id: Date.now(), // 使用时间戳作为模拟ID\r\n        username,\r\n        email,\r\n        phone,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      state.currentUser = mockUser;\r\n      state.isLoggedIn = true;\r\n      state.registerModalVisible = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCurrentUser,\r\n  clearCurrentUser,\r\n  showLoginModal,\r\n  hideLoginModal,\r\n  showRegisterModal,\r\n  hideRegisterModal,\r\n  setLoading,\r\n  setError,\r\n  clearError,\r\n  mockLogin,\r\n  mockRegister,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}