{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={items:[],totalQuantity:0,totalAmount:0,isOpen:false};// 计算购物车总数量和总金额\nconst calculateTotals=items=>{let totalQuantity=0;let totalAmount=0;items.forEach(item=>{totalQuantity+=item.quantity;totalAmount+=item.product.price*item.quantity;});return{totalQuantity,totalAmount};};const cartSlice=createSlice({name:'cart',initialState,reducers:{// 添加商品到购物车\naddToCart:(state,action)=>{const{product,quantity=1}=action.payload;const existingItemIndex=state.items.findIndex(item=>item.product.id===product.id);if(existingItemIndex>=0){// 如果商品已存在，增加数量\nstate.items[existingItemIndex].quantity+=quantity;}else{// 如果商品不存在，添加新项\nstate.items.push({product,quantity});}// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;},// 从购物车移除商品\nremoveFromCart:(state,action)=>{const productId=action.payload;state.items=state.items.filter(item=>item.product.id!==productId);// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;},// 更新商品数量\nupdateQuantity:(state,action)=>{const{productId,quantity}=action.payload;const itemIndex=state.items.findIndex(item=>item.product.id===productId);if(itemIndex>=0){if(quantity<=0){// 如果数量为0或负数，移除商品\nstate.items.splice(itemIndex,1);}else{// 更新数量\nstate.items[itemIndex].quantity=quantity;}// 重新计算总计\nconst totals=calculateTotals(state.items);state.totalQuantity=totals.totalQuantity;state.totalAmount=totals.totalAmount;}},// 清空购物车\nclearCart:state=>{state.items=[];state.totalQuantity=0;state.totalAmount=0;},// 打开购物车抽屉\nopenCart:state=>{state.isOpen=true;},// 关闭购物车抽屉\ncloseCart:state=>{state.isOpen=false;},// 切换购物车抽屉状态\ntoggleCart:state=>{state.isOpen=!state.isOpen;}}});export const{addToCart,removeFromCart,updateQuantity,clearCart,openCart,closeCart,toggleCart}=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","totalAmount","isOpen","calculateTotals","forEach","item","quantity","product","price","cartSlice","name","reducers","addToCart","state","action","payload","existingItemIndex","findIndex","id","push","totals","removeFromCart","productId","filter","updateQuantity","itemIndex","splice","clearCart","openCart","closeCart","toggleCart","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { CartItem, Product } from '../../types';\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n  totalQuantity: number;\r\n  totalAmount: number;\r\n  isOpen: boolean; // 购物车抽屉是否打开\r\n}\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  totalAmount: 0,\r\n  isOpen: false,\r\n};\r\n\r\n// 计算购物车总数量和总金额\r\nconst calculateTotals = (items: CartItem[]) => {\r\n  let totalQuantity = 0;\r\n  let totalAmount = 0;\r\n  \r\n  items.forEach(item => {\r\n    totalQuantity += item.quantity;\r\n    totalAmount += item.product.price * item.quantity;\r\n  });\r\n  \r\n  return { totalQuantity, totalAmount };\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    // 添加商品到购物车\r\n    addToCart: (state, action: PayloadAction<{ product: Product; quantity?: number }>) => {\r\n      const { product, quantity = 1 } = action.payload;\r\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\r\n      \r\n      if (existingItemIndex >= 0) {\r\n        // 如果商品已存在，增加数量\r\n        state.items[existingItemIndex].quantity += quantity;\r\n      } else {\r\n        // 如果商品不存在，添加新项\r\n        state.items.push({ product, quantity });\r\n      }\r\n      \r\n      // 重新计算总计\r\n      const totals = calculateTotals(state.items);\r\n      state.totalQuantity = totals.totalQuantity;\r\n      state.totalAmount = totals.totalAmount;\r\n    },\r\n    \r\n    // 从购物车移除商品\r\n    removeFromCart: (state, action: PayloadAction<number>) => {\r\n      const productId = action.payload;\r\n      state.items = state.items.filter(item => item.product.id !== productId);\r\n      \r\n      // 重新计算总计\r\n      const totals = calculateTotals(state.items);\r\n      state.totalQuantity = totals.totalQuantity;\r\n      state.totalAmount = totals.totalAmount;\r\n    },\r\n    \r\n    // 更新商品数量\r\n    updateQuantity: (state, action: PayloadAction<{ productId: number; quantity: number }>) => {\r\n      const { productId, quantity } = action.payload;\r\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\r\n      \r\n      if (itemIndex >= 0) {\r\n        if (quantity <= 0) {\r\n          // 如果数量为0或负数，移除商品\r\n          state.items.splice(itemIndex, 1);\r\n        } else {\r\n          // 更新数量\r\n          state.items[itemIndex].quantity = quantity;\r\n        }\r\n        \r\n        // 重新计算总计\r\n        const totals = calculateTotals(state.items);\r\n        state.totalQuantity = totals.totalQuantity;\r\n        state.totalAmount = totals.totalAmount;\r\n      }\r\n    },\r\n    \r\n    // 清空购物车\r\n    clearCart: (state) => {\r\n      state.items = [];\r\n      state.totalQuantity = 0;\r\n      state.totalAmount = 0;\r\n    },\r\n    \r\n    // 打开购物车抽屉\r\n    openCart: (state) => {\r\n      state.isOpen = true;\r\n    },\r\n    \r\n    // 关闭购物车抽屉\r\n    closeCart: (state) => {\r\n      state.isOpen = false;\r\n    },\r\n    \r\n    // 切换购物车抽屉状态\r\n    toggleCart: (state) => {\r\n      state.isOpen = !state.isOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addToCart,\r\n  removeFromCart,\r\n  updateQuantity,\r\n  clearCart,\r\n  openCart,\r\n  closeCart,\r\n  toggleCart,\r\n} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}