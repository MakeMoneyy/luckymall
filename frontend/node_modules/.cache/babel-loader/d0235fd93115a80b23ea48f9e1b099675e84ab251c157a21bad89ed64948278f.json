{"ast":null,"code":"import api from './api';\n\n/**\r\n * 订单请求参数\r\n */\n\n/**\r\n * 订单响应\r\n */\n\n/**\r\n * 订单服务类\r\n */\nexport class OrderService {\n  /**\r\n   * 创建订单\r\n   */\n  static async createOrder(userId, request) {\n    const response = await api.post(`/api/orders/${userId}`, request);\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据ID查询订单\r\n   */\n  static async getOrderById(orderId) {\n    const response = await api.get(`/api/orders/${orderId}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据订单号查询订单\r\n   */\n  static async getOrderByOrderNo(orderNo) {\n    const response = await api.get(`/api/orders/no/${orderNo}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据用户ID查询订单列表\r\n   */\n  static async getOrdersByUserId(userId) {\n    const response = await api.get(`/api/orders/user/${userId}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 根据用户ID和状态查询订单列表\r\n   */\n  static async getOrdersByUserIdAndStatus(userId, orderStatus) {\n    const response = await api.get(`/api/orders/user/${userId}/status/${orderStatus}`);\n    return response.data.data;\n  }\n\n  /**\r\n   * 取消订单\r\n   */\n  static async cancelOrder(orderId, userId) {\n    const response = await api.post(`/api/orders/${orderId}/cancel`, null, {\n      params: {\n        userId\n      }\n    });\n    return response.data.message;\n  }\n\n  /**\r\n   * 确认收货\r\n   */\n  static async confirmReceive(orderId, userId) {\n    const response = await api.post(`/api/orders/${orderId}/confirm`, null, {\n      params: {\n        userId\n      }\n    });\n    return response.data.message;\n  }\n\n  /**\r\n   * 支付订单\r\n   */\n  static async payOrder(orderId, userId) {\n    const response = await api.post(`/api/orders/${orderId}/pay`, null, {\n      params: {\n        userId\n      }\n    });\n    return response.data.message;\n  }\n}","map":{"version":3,"names":["api","OrderService","createOrder","userId","request","response","post","data","getOrderById","orderId","get","getOrderByOrderNo","orderNo","getOrdersByUserId","getOrdersByUserIdAndStatus","orderStatus","cancelOrder","params","message","confirmReceive","payOrder"],"sources":["D:/luckymall/frontend/src/services/orderService.ts"],"sourcesContent":["import api from './api';\r\nimport { ApiResponse, Order } from '../types';\r\n\r\n/**\r\n * 订单请求参数\r\n */\r\nexport interface CreateOrderRequest {\r\n  cartItemIds: number[];\r\n  addressId: number;\r\n  paymentMethod: string;\r\n  creditCardId?: number;\r\n  installmentPlanId?: number;\r\n  couponId?: number;\r\n  pointsUsed?: number;\r\n  expectedAmount: number;\r\n  remark?: string;\r\n}\r\n\r\n/**\r\n * 订单响应\r\n */\r\nexport interface CreateOrderResponse {\r\n  orderId: number;\r\n  orderNo: string;\r\n  totalAmount: number;\r\n  actualAmount: number;\r\n  isInstallment: boolean;\r\n  installmentCount?: number;\r\n  monthlyAmount?: number;\r\n  paymentMethod: string;\r\n  receiverAddress: string;\r\n}\r\n\r\n/**\r\n * 订单服务类\r\n */\r\nexport class OrderService {\r\n  /**\r\n   * 创建订单\r\n   */\r\n  static async createOrder(userId: number, request: CreateOrderRequest): Promise<CreateOrderResponse> {\r\n    const response = await api.post<ApiResponse<CreateOrderResponse>>(`/api/orders/${userId}`, request);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据ID查询订单\r\n   */\r\n  static async getOrderById(orderId: number): Promise<Order> {\r\n    const response = await api.get<ApiResponse<Order>>(`/api/orders/${orderId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据订单号查询订单\r\n   */\r\n  static async getOrderByOrderNo(orderNo: string): Promise<Order> {\r\n    const response = await api.get<ApiResponse<Order>>(`/api/orders/no/${orderNo}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据用户ID查询订单列表\r\n   */\r\n  static async getOrdersByUserId(userId: number): Promise<Order[]> {\r\n    const response = await api.get<ApiResponse<Order[]>>(`/api/orders/user/${userId}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 根据用户ID和状态查询订单列表\r\n   */\r\n  static async getOrdersByUserIdAndStatus(userId: number, orderStatus: string): Promise<Order[]> {\r\n    const response = await api.get<ApiResponse<Order[]>>(`/api/orders/user/${userId}/status/${orderStatus}`);\r\n    return response.data.data;\r\n  }\r\n\r\n  /**\r\n   * 取消订单\r\n   */\r\n  static async cancelOrder(orderId: number, userId: number): Promise<string> {\r\n    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/cancel`, null, {\r\n      params: { userId }\r\n    });\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 确认收货\r\n   */\r\n  static async confirmReceive(orderId: number, userId: number): Promise<string> {\r\n    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/confirm`, null, {\r\n      params: { userId }\r\n    });\r\n    return response.data.message;\r\n  }\r\n\r\n  /**\r\n   * 支付订单\r\n   */\r\n  static async payOrder(orderId: number, userId: number): Promise<string> {\r\n    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/pay`, null, {\r\n      params: { userId }\r\n    });\r\n    return response.data.message;\r\n  }\r\n} "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAGvB;AACA;AACA;;AAaA;AACA;AACA;;AAaA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,CAAC;EACxB;AACF;AACA;EACE,aAAaC,WAAWA,CAACC,MAAc,EAAEC,OAA2B,EAAgC;IAClG,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAmC,eAAeH,MAAM,EAAE,EAAEC,OAAO,CAAC;IACnG,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;;EAEA;AACF;AACA;EACE,aAAaC,YAAYA,CAACC,OAAe,EAAkB;IACzD,MAAMJ,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAqB,eAAeD,OAAO,EAAE,CAAC;IAC5E,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;;EAEA;AACF;AACA;EACE,aAAaI,iBAAiBA,CAACC,OAAe,EAAkB;IAC9D,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAqB,kBAAkBE,OAAO,EAAE,CAAC;IAC/E,OAAOP,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;;EAEA;AACF;AACA;EACE,aAAaM,iBAAiBA,CAACV,MAAc,EAAoB;IAC/D,MAAME,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAuB,oBAAoBP,MAAM,EAAE,CAAC;IAClF,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;;EAEA;AACF;AACA;EACE,aAAaO,0BAA0BA,CAACX,MAAc,EAAEY,WAAmB,EAAoB;IAC7F,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAuB,oBAAoBP,MAAM,WAAWY,WAAW,EAAE,CAAC;IACxG,OAAOV,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;;EAEA;AACF;AACA;EACE,aAAaS,WAAWA,CAACP,OAAe,EAAEN,MAAc,EAAmB;IACzE,MAAME,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAsB,eAAeG,OAAO,SAAS,EAAE,IAAI,EAAE;MAC1FQ,MAAM,EAAE;QAAEd;MAAO;IACnB,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI,CAACW,OAAO;EAC9B;;EAEA;AACF;AACA;EACE,aAAaC,cAAcA,CAACV,OAAe,EAAEN,MAAc,EAAmB;IAC5E,MAAME,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAsB,eAAeG,OAAO,UAAU,EAAE,IAAI,EAAE;MAC3FQ,MAAM,EAAE;QAAEd;MAAO;IACnB,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI,CAACW,OAAO;EAC9B;;EAEA;AACF;AACA;EACE,aAAaE,QAAQA,CAACX,OAAe,EAAEN,MAAc,EAAmB;IACtE,MAAME,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAsB,eAAeG,OAAO,MAAM,EAAE,IAAI,EAAE;MACvFQ,MAAM,EAAE;QAAEd;MAAO;IACnB,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI,CAACW,OAAO;EAC9B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}