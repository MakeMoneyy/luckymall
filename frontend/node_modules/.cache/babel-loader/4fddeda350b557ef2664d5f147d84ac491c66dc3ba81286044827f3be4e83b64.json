{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { CartService } from '../../services/cartService';\n\n// 模拟用户ID\nconst MOCK_USER_ID = 1;\n\n// 异步action：添加商品到购物车\nexport const addToCartAsync = createAsyncThunk('cart/addToCartAsync', async ({\n  product,\n  quantity\n}, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API\n    await CartService.addToCart(MOCK_USER_ID, product.id, quantity);\n    // 更新Redux状态\n    dispatch(addToCart({\n      product,\n      quantity\n    }));\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('添加商品到购物车失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：更新购物车商品数量\nexport const updateQuantityAsync = createAsyncThunk('cart/updateQuantityAsync', async ({\n  productId,\n  quantity\n}, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API\n    await CartService.updateCartItemQuantity(MOCK_USER_ID, productId, quantity);\n    // 更新Redux状态\n    dispatch(updateQuantity({\n      productId,\n      quantity\n    }));\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('更新购物车商品数量失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：从购物车删除商品\nexport const removeFromCartAsync = createAsyncThunk('cart/removeFromCartAsync', async (productId, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API\n    await CartService.removeFromCartByProductId(MOCK_USER_ID, productId);\n    // 更新Redux状态\n    dispatch(removeFromCart(productId));\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('从购物车删除商品失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：清空购物车\nexport const clearCartAsync = createAsyncThunk('cart/clearCartAsync', async (_, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API\n    await CartService.clearCart(MOCK_USER_ID);\n    // 更新Redux状态\n    dispatch(clearCart());\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('清空购物车失败:', error);\n    throw error;\n  }\n});\n\n// 异步action：加载购物车\nexport const loadCartAsync = createAsyncThunk('cart/loadCartAsync', async (_, {\n  dispatch\n}) => {\n  try {\n    // 调用后端API获取购物车数据\n    const cartItems = await CartService.getCartItems(MOCK_USER_ID);\n    // 更新Redux状态\n    dispatch(setCartItems(cartItems));\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('加载购物车失败:', error);\n    throw error;\n  }\n});\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n  isOpen: false,\n  coupon: null,\n  pointsUsed: 0,\n  discountAmount: 0,\n  actualAmount: 0\n};\n\n// 计算购物车总数量和总金额\nconst calculateTotals = items => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  return {\n    totalQuantity,\n    totalAmount\n  };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount, coupon, pointsUsed) => {\n  let discountAmount = 0;\n\n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n\n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n\n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n\n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  return {\n    discountAmount,\n    actualAmount\n  };\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 设置购物车商品列表\n    setCartItems: (state, action) => {\n      state.items = action.payload;\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 添加商品到购物车\n    addToCart: (state, action) => {\n      const {\n        product,\n        quantity = 1\n      } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({\n          product,\n          quantity\n        });\n      }\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 从购物车移除商品\n    removeFromCart: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n\n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 更新商品数量\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n\n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n\n        // 重新计算优惠后金额\n        const {\n          discountAmount,\n          actualAmount\n        } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    // 清空购物车\n    clearCart: state => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    // 应用优惠券\n    applyCoupon: (state, action) => {\n      state.coupon = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 使用积分\n    applyPoints: (state, action) => {\n      state.pointsUsed = action.payload;\n\n      // 重新计算优惠后金额\n      const {\n        discountAmount,\n        actualAmount\n      } = calculateActualAmount(state.totalAmount, state.coupon, state.pointsUsed);\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    // 打开购物车抽屉\n    openCart: state => {\n      state.isOpen = true;\n    },\n    // 关闭购物车抽屉\n    closeCart: state => {\n      state.isOpen = false;\n    },\n    // 切换购物车抽屉状态\n    toggleCart: state => {\n      state.isOpen = !state.isOpen;\n    }\n  }\n});\nexport const {\n  setCartItems,\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","CartService","MOCK_USER_ID","addToCartAsync","product","quantity","dispatch","addToCart","id","success","error","console","updateQuantityAsync","productId","updateCartItemQuantity","updateQuantity","removeFromCartAsync","removeFromCartByProductId","removeFromCart","clearCartAsync","_","clearCart","loadCartAsync","cartItems","getCartItems","setCartItems","initialState","items","totalQuantity","totalAmount","isOpen","coupon","pointsUsed","discountAmount","actualAmount","calculateTotals","forEach","item","price","calculateActualAmount","minAmount","type","value","pointsDiscount","Math","min","cartSlice","name","reducers","state","action","payload","totals","existingItemIndex","findIndex","push","filter","itemIndex","splice","applyCoupon","applyPoints","openCart","closeCart","toggleCart","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { CartItem, Product, Coupon } from '../../types';\nimport { CartService } from '../../services/cartService';\n\n// 模拟用户ID\nconst MOCK_USER_ID = 1;\n\n// 异步action：添加商品到购物车\nexport const addToCartAsync = createAsyncThunk(\n  'cart/addToCartAsync',\n  async ({ product, quantity }: { product: Product; quantity: number }, { dispatch }) => {\n    try {\n      // 调用后端API\n      await CartService.addToCart(MOCK_USER_ID, product.id, quantity);\n      // 更新Redux状态\n      dispatch(addToCart({ product, quantity }));\n      return { success: true };\n    } catch (error) {\n      console.error('添加商品到购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：更新购物车商品数量\nexport const updateQuantityAsync = createAsyncThunk(\n  'cart/updateQuantityAsync',\n  async ({ productId, quantity }: { productId: number; quantity: number }, { dispatch }) => {\n    try {\n      // 调用后端API\n      await CartService.updateCartItemQuantity(MOCK_USER_ID, productId, quantity);\n      // 更新Redux状态\n      dispatch(updateQuantity({ productId, quantity }));\n      return { success: true };\n    } catch (error) {\n      console.error('更新购物车商品数量失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：从购物车删除商品\nexport const removeFromCartAsync = createAsyncThunk(\n  'cart/removeFromCartAsync',\n  async (productId: number, { dispatch }) => {\n    try {\n      // 调用后端API\n      await CartService.removeFromCartByProductId(MOCK_USER_ID, productId);\n      // 更新Redux状态\n      dispatch(removeFromCart(productId));\n      return { success: true };\n    } catch (error) {\n      console.error('从购物车删除商品失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：清空购物车\nexport const clearCartAsync = createAsyncThunk(\n  'cart/clearCartAsync',\n  async (_, { dispatch }) => {\n    try {\n      // 调用后端API\n      await CartService.clearCart(MOCK_USER_ID);\n      // 更新Redux状态\n      dispatch(clearCart());\n      return { success: true };\n    } catch (error) {\n      console.error('清空购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\n// 异步action：加载购物车\nexport const loadCartAsync = createAsyncThunk(\n  'cart/loadCartAsync',\n  async (_, { dispatch }) => {\n    try {\n      // 调用后端API获取购物车数据\n      const cartItems = await CartService.getCartItems(MOCK_USER_ID);\n      // 更新Redux状态\n      dispatch(setCartItems(cartItems));\n      return { success: true };\n    } catch (error) {\n      console.error('加载购物车失败:', error);\n      throw error;\n    }\n  }\n);\n\ninterface CartState {\n  items: CartItem[];\n  totalQuantity: number;\n  totalAmount: number;\n  isOpen: boolean; // 购物车抽屉是否打开\n  coupon: Coupon | null; // 已选择的优惠券\n  pointsUsed: number; // 使用的积分\n  discountAmount: number; // 优惠金额\n  actualAmount: number; // 实际支付金额\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n  isOpen: false,\n  coupon: null,\n  pointsUsed: 0,\n  discountAmount: 0,\n  actualAmount: 0,\n};\n\n// 计算购物车总数量和总金额\nconst calculateTotals = (items: CartItem[]) => {\n  let totalQuantity = 0;\n  let totalAmount = 0;\n  \n  items.forEach(item => {\n    totalQuantity += item.quantity;\n    totalAmount += item.product.price * item.quantity;\n  });\n  \n  return { totalQuantity, totalAmount };\n};\n\n// 计算优惠后的实际金额\nconst calculateActualAmount = (totalAmount: number, coupon: Coupon | null, pointsUsed: number) => {\n  let discountAmount = 0;\n  \n  // 计算优惠券折扣\n  if (coupon) {\n    if (totalAmount >= coupon.minAmount) {\n      if (coupon.type === 'DISCOUNT') {\n        // 折扣券，如8折就是0.8\n        discountAmount += totalAmount * (1 - coupon.value / 10);\n      } else if (coupon.type === 'FIXED') {\n        // 满减券\n        discountAmount += coupon.value;\n      }\n    }\n  }\n  \n  // 计算积分折扣（假设100积分=1元）\n  const pointsDiscount = pointsUsed / 100;\n  discountAmount += pointsDiscount;\n  \n  // 确保折扣不超过总金额\n  discountAmount = Math.min(discountAmount, totalAmount);\n  \n  // 计算实际支付金额\n  const actualAmount = totalAmount - discountAmount;\n  \n  return { discountAmount, actualAmount };\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // 设置购物车商品列表\n    setCartItems: (state, action: PayloadAction<CartItem[]>) => {\n      state.items = action.payload;\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 添加商品到购物车\n    addToCart: (state, action: PayloadAction<{ product: Product; quantity?: number }>) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.product.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // 如果商品已存在，增加数量\n        state.items[existingItemIndex].quantity += quantity;\n      } else {\n        // 如果商品不存在，添加新项\n        state.items.push({ product, quantity });\n      }\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 从购物车移除商品\n    removeFromCart: (state, action: PayloadAction<number>) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.product.id !== productId);\n      \n      // 重新计算总计\n      const totals = calculateTotals(state.items);\n      state.totalQuantity = totals.totalQuantity;\n      state.totalAmount = totals.totalAmount;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 更新商品数量\n    updateQuantity: (state, action: PayloadAction<{ productId: number; quantity: number }>) => {\n      const { productId, quantity } = action.payload;\n      const itemIndex = state.items.findIndex(item => item.product.id === productId);\n      \n      if (itemIndex >= 0) {\n        if (quantity <= 0) {\n          // 如果数量为0或负数，移除商品\n          state.items.splice(itemIndex, 1);\n        } else {\n          // 更新数量\n          state.items[itemIndex].quantity = quantity;\n        }\n        \n        // 重新计算总计\n        const totals = calculateTotals(state.items);\n        state.totalQuantity = totals.totalQuantity;\n        state.totalAmount = totals.totalAmount;\n        \n        // 重新计算优惠后金额\n        const { discountAmount, actualAmount } = calculateActualAmount(\n          state.totalAmount, \n          state.coupon, \n          state.pointsUsed\n        );\n        state.discountAmount = discountAmount;\n        state.actualAmount = actualAmount;\n      }\n    },\n    \n    // 清空购物车\n    clearCart: (state) => {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n      state.coupon = null;\n      state.pointsUsed = 0;\n      state.discountAmount = 0;\n      state.actualAmount = 0;\n    },\n    \n    // 应用优惠券\n    applyCoupon: (state, action: PayloadAction<Coupon | null>) => {\n      state.coupon = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 使用积分\n    applyPoints: (state, action: PayloadAction<number>) => {\n      state.pointsUsed = action.payload;\n      \n      // 重新计算优惠后金额\n      const { discountAmount, actualAmount } = calculateActualAmount(\n        state.totalAmount, \n        state.coupon, \n        state.pointsUsed\n      );\n      state.discountAmount = discountAmount;\n      state.actualAmount = actualAmount;\n    },\n    \n    // 打开购物车抽屉\n    openCart: (state) => {\n      state.isOpen = true;\n    },\n    \n    // 关闭购物车抽屉\n    closeCart: (state) => {\n      state.isOpen = false;\n    },\n    \n    // 切换购物车抽屉状态\n    toggleCart: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n  },\n});\n\nexport const {\n  setCartItems,\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  applyCoupon,\n  applyPoints,\n  openCart,\n  closeCart,\n  toggleCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}