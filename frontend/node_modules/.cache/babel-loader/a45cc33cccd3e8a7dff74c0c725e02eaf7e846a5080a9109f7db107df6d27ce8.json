{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{ProductService}from'../../services/productService';// 异步action：获取所有分类\nexport const fetchAllCategories=createAsyncThunk('categories/fetchAllCategories',async()=>{const response=await ProductService.getAllCategories();return response;});// 异步action：获取顶级分类\nexport const fetchTopCategories=createAsyncThunk('categories/fetchTopCategories',async()=>{const response=await ProductService.getTopCategories();return response;});// 异步action：根据父分类ID获取子分类\nexport const fetchCategoriesByParentId=createAsyncThunk('categories/fetchCategoriesByParentId',async parentId=>{const response=await ProductService.getCategoriesByParentId(parentId);return{parentId,categories:response};});const initialState={allCategories:[],topCategories:[],subCategories:{},loading:false,error:null,selectedCategoryId:null};const categorySlice=createSlice({name:'categories',initialState,reducers:{// 设置选中的分类\nsetSelectedCategory:(state,action)=>{state.selectedCategoryId=action.payload;},// 清除选中的分类\nclearSelectedCategory:state=>{state.selectedCategoryId=null;}},extraReducers:builder=>{// 获取所有分类\nbuilder.addCase(fetchAllCategories.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchAllCategories.fulfilled,(state,action)=>{state.loading=false;state.allCategories=action.payload;}).addCase(fetchAllCategories.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'获取分类失败';});// 获取顶级分类\nbuilder.addCase(fetchTopCategories.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchTopCategories.fulfilled,(state,action)=>{state.loading=false;state.topCategories=action.payload;}).addCase(fetchTopCategories.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'获取顶级分类失败';});// 获取子分类\nbuilder.addCase(fetchCategoriesByParentId.fulfilled,(state,action)=>{const{parentId,categories}=action.payload;state.subCategories[parentId]=categories;});}});export const{setSelectedCategory,clearSelectedCategory}=categorySlice.actions;export default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ProductService","fetchAllCategories","response","getAllCategories","fetchTopCategories","getTopCategories","fetchCategoriesByParentId","parentId","getCategoriesByParentId","categories","initialState","allCategories","topCategories","subCategories","loading","error","selectedCategoryId","categorySlice","name","reducers","setSelectedCategory","state","action","payload","clearSelectedCategory","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["D:/luckymall/frontend/src/store/slices/categorySlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { Category } from '../../types';\r\nimport { ProductService } from '../../services/productService';\r\n\r\n// 异步action：获取所有分类\r\nexport const fetchAllCategories = createAsyncThunk(\r\n  'categories/fetchAllCategories',\r\n  async () => {\r\n    const response = await ProductService.getAllCategories();\r\n    return response;\r\n  }\r\n);\r\n\r\n// 异步action：获取顶级分类\r\nexport const fetchTopCategories = createAsyncThunk(\r\n  'categories/fetchTopCategories',\r\n  async () => {\r\n    const response = await ProductService.getTopCategories();\r\n    return response;\r\n  }\r\n);\r\n\r\n// 异步action：根据父分类ID获取子分类\r\nexport const fetchCategoriesByParentId = createAsyncThunk(\r\n  'categories/fetchCategoriesByParentId',\r\n  async (parentId: number) => {\r\n    const response = await ProductService.getCategoriesByParentId(parentId);\r\n    return { parentId, categories: response };\r\n  }\r\n);\r\n\r\ninterface CategoryState {\r\n  // 所有分类\r\n  allCategories: Category[];\r\n  \r\n  // 顶级分类\r\n  topCategories: Category[];\r\n  \r\n  // 子分类映射 {parentId: Category[]}\r\n  subCategories: Record<number, Category[]>;\r\n  \r\n  // 加载状态\r\n  loading: boolean;\r\n  error: string | null;\r\n  \r\n  // 当前选中的分类\r\n  selectedCategoryId: number | null;\r\n}\r\n\r\nconst initialState: CategoryState = {\r\n  allCategories: [],\r\n  topCategories: [],\r\n  subCategories: {},\r\n  loading: false,\r\n  error: null,\r\n  selectedCategoryId: null,\r\n};\r\n\r\nconst categorySlice = createSlice({\r\n  name: 'categories',\r\n  initialState,\r\n  reducers: {\r\n    // 设置选中的分类\r\n    setSelectedCategory: (state, action) => {\r\n      state.selectedCategoryId = action.payload;\r\n    },\r\n    \r\n    // 清除选中的分类\r\n    clearSelectedCategory: (state) => {\r\n      state.selectedCategoryId = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // 获取所有分类\r\n    builder\r\n      .addCase(fetchAllCategories.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchAllCategories.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.allCategories = action.payload;\r\n      })\r\n      .addCase(fetchAllCategories.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || '获取分类失败';\r\n      });\r\n    \r\n    // 获取顶级分类\r\n    builder\r\n      .addCase(fetchTopCategories.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchTopCategories.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.topCategories = action.payload;\r\n      })\r\n      .addCase(fetchTopCategories.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || '获取顶级分类失败';\r\n      });\r\n    \r\n    // 获取子分类\r\n    builder\r\n      .addCase(fetchCategoriesByParentId.fulfilled, (state, action) => {\r\n        const { parentId, categories } = action.payload;\r\n        state.subCategories[parentId] = categories;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { \r\n  setSelectedCategory, \r\n  clearSelectedCategory \r\n} = categorySlice.actions;\r\n\r\nexport default categorySlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}