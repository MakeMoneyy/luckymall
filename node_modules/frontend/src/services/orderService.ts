import api from './api';
import { ApiResponse, Order } from '../types';

/**
 * 订单请求参数
 */
export interface CreateOrderRequest {
  cartItemIds: number[];
  addressId: number;
  paymentMethod: string;
  creditCardId?: number;
  installmentPlanId?: number;
  couponId?: number;
  pointsUsed?: number;
  expectedAmount: number;
  remark?: string;
}

/**
 * 订单响应
 */
export interface CreateOrderResponse {
  orderId: number;
  orderNo: string;
  totalAmount: number;
  actualAmount: number;
  isInstallment: boolean;
  installmentCount?: number;
  monthlyAmount?: number;
  paymentMethod: string;
  receiverAddress: string;
}

/**
 * 订单服务类
 */
export class OrderService {
  /**
   * 创建订单
   */
  static async createOrder(userId: number, request: CreateOrderRequest): Promise<CreateOrderResponse> {
    const response = await api.post<ApiResponse<CreateOrderResponse>>(`/api/orders/${userId}`, request);
    return response.data.data;
  }

  /**
   * 根据ID查询订单
   */
  static async getOrderById(orderId: number): Promise<Order> {
    const response = await api.get<ApiResponse<Order>>(`/api/orders/${orderId}`);
    return response.data.data;
  }

  /**
   * 根据订单号查询订单
   */
  static async getOrderByOrderNo(orderNo: string): Promise<Order> {
    const response = await api.get<ApiResponse<Order>>(`/api/orders/no/${orderNo}`);
    return response.data.data;
  }

  /**
   * 根据用户ID查询订单列表
   */
  static async getOrdersByUserId(userId: number): Promise<Order[]> {
    const response = await api.get<ApiResponse<Order[]>>(`/api/orders/user/${userId}`);
    return response.data.data;
  }

  /**
   * 根据用户ID和状态查询订单列表
   */
  static async getOrdersByUserIdAndStatus(userId: number, orderStatus: string): Promise<Order[]> {
    const response = await api.get<ApiResponse<Order[]>>(`/api/orders/user/${userId}/status/${orderStatus}`);
    return response.data.data;
  }

  /**
   * 取消订单
   */
  static async cancelOrder(orderId: number, userId: number): Promise<string> {
    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/cancel`, null, {
      params: { userId }
    });
    return response.data.message;
  }

  /**
   * 确认收货
   */
  static async confirmReceive(orderId: number, userId: number): Promise<string> {
    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/confirm`, null, {
      params: { userId }
    });
    return response.data.message;
  }

  /**
   * 支付订单
   */
  static async payOrder(orderId: number, userId: number): Promise<string> {
    const response = await api.post<ApiResponse<string>>(`/api/orders/${orderId}/pay`, null, {
      params: { userId }
    });
    return response.data.message;
  }
} 